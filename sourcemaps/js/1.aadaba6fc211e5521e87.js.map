{"version":3,"sources":["webpack:///./src/components/List/index.tsx","webpack:///./src/components/SegmentInput/styles.css","webpack:///./src/components/RasterLegend/styles.css","webpack:///./src/components/BubbleLegend/index.tsx","webpack:///./src/components/ToggleButton/index.tsx","webpack:///./src/components/PrintDetailsBar/styles.css","webpack:///./src/components/PrintButton/index.tsx","webpack:///./src/components/SelectInput/styles.css","webpack:///./src/hooks/useMapStateForIndicator.tsx","webpack:///./src/hooks/useBlurEffect.ts","webpack:///./src/components/Portal.tsx","webpack:///./src/components/RawInput/index.tsx","webpack:///./src/components/Input/index.tsx","webpack:///./src/components/TextInput/index.tsx","webpack:///./src/components/SelectInput/index.tsx","webpack:///./src/components/SegmentInput/Option/index.tsx","webpack:///./src/components/SegmentInput/index.tsx","webpack:///./src/components/ChoroplethLegend/index.tsx","webpack:///./src/vendor/re-map/utils.tsx","webpack:///./src/vendor/re-map/MapSource/index.tsx","webpack:///./src/components/PrintDetailsBar/index.tsx","webpack:///./src/components/Button/index.tsx","webpack:///./src/components/RawButton/styles.css","webpack:///./src/components/TextInput/styles.css","webpack:///./src/components/Numeral/styles.css","webpack:///./src/vendor/re-map/MapSource/MapLayer.tsx","webpack:///./src/components/Label/styles.css","webpack:///./src/components/Backdrop/styles.css","webpack:///./src/vendor/re-map/MapContainer/styles.css","webpack:///./src/components/LoadingAnimation/styles.css","webpack:///./src/components/Input/styles.css","webpack:///./src/vendor/re-map/index.tsx","webpack:///./src/vendor/re-map/useDimension.tsx","webpack:///./src/vendor/re-map/MapContainer/index.tsx","webpack:///./src/vendor/re-map/MapSource/MapState.tsx","webpack:///./src/components/IndicatorMap/mapTheme.ts","webpack:///./src/components/IndicatorMap/index.tsx","webpack:///./src/utils/common.ts","webpack:///./src/components/RawButton/index.tsx","webpack:///./src/components/Button/styles.css","webpack:///./src/vendor/re-map/MapTooltip.tsx","webpack:///./src/components/IndicatorMap/styles.css","webpack:///./src/components/RegionSelector/index.tsx","webpack:///./src/vendor/re-map/context.ts","webpack:///./src/components/RawInput/styles.css","webpack:///./src/components/BubbleLegend/styles.css","webpack:///./src/utils/constants.ts","webpack:///./src/components/Numeral/index.tsx","webpack:///./src/hooks/useRequest.ts","webpack:///./src/components/ToggleButton/styles.css","webpack:///./src/components/SegmentInput/Option/styles.css","webpack:///./src/components/ChoroplethLegend/styles.css","webpack:///./src/components/LoadingAnimation/index.tsx","webpack:///./src/components/Backdrop/index.tsx","webpack:///./src/components/PrintButton/styles.css","webpack:///./src/components/Label/index.tsx","webpack:///./src/components/RasterLegend/index.tsx","webpack:///./src/components/RegionSelector/styles.css"],"names":["GroupedList","props","groupKeySelector","groupComparator","Renderer","renderer","GroupRenderer","groupRenderer","groupRendererClassName","groupRendererParams","data","keySelector","rendererParams","rendererClassName","renderListItem","datum","i","key","extraProps","className","groups","useMemo","listToGroupList","sortedGroupKeys","keys","children","groupKey","push","index","renderGroup","List","isNotDefined","grouped","hasGroup","defaultProps","module","exports","LegendItem","value","color","radius","maxRadius","_cs","styles","legendItem","style","backgroundColor","width","height","margin","normalize","BubbleLegend","radiusSelector","valueSelector","itemClassName","title","negativeColor","positiveColor","legendType","unit","legendItemRendererParams","useCallback","_","d","allData","radiuses","Math","max","undefined","length","bubbleLegend","heading","footer","negative","circle","positive","ToggleSwitch","disabled","switch","on","off","knob","ToggleButton","label","onChange","handleClick","React","toggleButton","onClick","PrintButton","printMode","onPrintModeChange","handlePrintPreviewClick","handlePrintPreviewCancelClick","handlePrintClick","window","print","printContainer","variant","useMapStateForIndicator","regionLevel","selectedIndicator","regionIndicatorUrl","isDefined","String","apiEndPoint","useRequest","regionIndicatorListPending","regionIndicatorListResponse","mapState","results","id","code","useBlurEffect","shouldWatch","callback","elementRef","parentRef","useEffect","handleDocumentClick","e","element","current","parent","isElementOrContainedInElement","target","contains","isParentOrContainedInParent","document","addEventListener","removeEventListener","Portal","ReactDOM","createPortal","body","RawInput","onBlur","otherProps","ref","currentTarget","name","rawInput","Input","icons","actions","inputRef","inputContainer","main","input","TextInput","type","textInput","Option","divRef","useRef","focusedByMouse","selected","scrollIntoView","block","handleMouseMove","handleMouseLeave","RawButton","onMouseMove","onMouseLeave","Dropdown","getFloatPlacement","dropdownContainer","GroupName","SelectInput","dropdownContainerClassName","options","optionLabelSelector","optionKeySelector","placeholder","hideLabel","error","labelRightComponent","labelRightComponentClassName","inputContainerRef","inputElementRef","dropdownRef","useState","showDropdown","setShowDropdown","searchValue","setSearchValue","inputValue","option","o","hideDropdownOnBlur","isInsideClick","filteredOptions","isFalsyString","caseInsensitiveSubmatch","a","b","compareStringSearch","handleOptionClick","optionKey","console","handleInputClick","select","handleInputValueChange","newInputValue","handleClearClick","group","selectInput","Label","rightComponent","rightComponentClassName","Button","clearButton","transparent","message","isActive","role","active","SegmentInput","segmentInput","RenderOption","optionLabel","LegendElement","opacity","legendElement","ChoroplethLegend","minValue","legend","colors","legendContainer","choroplethLegend","getLayerName","sourceKey","layerKey","usePrevious","initialValue","noop","MapSource","sourceOptions","geoJson","createMarkerElement","useContext","MapChildContext","map","mapStyle","setSource","getSource","removeSource","isSourceDefined","isMapDestroyed","debug","initialDebug","updateValue","increaseValue","v","useCounter","forceUpdate","initialGeoJson","initialSourceOptions","warn","addSource","destroy","source","layers","setData","markers","markersOnScreen","updateMarkers","newMarkers","features","querySourceFeatures","feature","geometry","coordinates","properties","cluster","clusterId","cluster_id","marker","el","mapboxgl","Marker","setLngLat","addTo","markerId","remove","interval","clearInterval","getLayer","setLayer","method","newSource","produce","safeSource","removeLayer","childrenProps","Provider","PrintDetailsBar","description","show","printDetailsBar","leftContainer","rightContainer","logo","src","dfidLogo","alt","classNameFromProps","pending","buttonClassName","button","loadingBackdrop","MapLayer","layerOptions","onDoubleClick","onMouseEnter","beneath","onAnimationFrame","SourceChildContext","initialLayerOptions","initialBeneath","animationKeyRef","obj","cleanNewLayerOptions","newLayerOptions","addLayer","layer","paint","filter","layout","setPaintProperty","setLayoutProperty","setFilter","requestAnimationFrame","handleAnimation","timestamp","values","cancelAnimationFrame","UNSUPPORTED_BROWSER","supported","TOKEN","process","findLayerFromLayers","l","getLayersForSources","sources","accessToken","Map","mapStyleFromProps","mapOptions","scaleControlPosition","scaleControlShown","scaleControlOptions","navControlShown","navControlOptions","navControlPosition","setMapStyle","loaded","setLoaded","boundsRef","paddingRef","durationRef","lastIn","mapDestroyedRef","sourcesRef","mapRef","mapContainerRef","setBounds","bounds","padding","duration","mapContainer","mapboxglMap","container","preserveDrawingBuffer","scale","ScaleControl","addControl","nav","NavigationControl","point","lngLat","clickableLayerKeys","clickableFeatures","queryRenderedFeatures","clickableFeature","handleDoubleClick","interactiveLayerKeys","getCanvas","cursor","hoverableLayerKeys","hoverableFeatures","removeFeatureState","sourceName","sourceLayer","layerName","firstFeature","setFeatureState","hovered","handleResize","fooLon","fooLat","barLon","barLat","fitBounds","setStyle","onStyleData","info","once","onLoad","mapChildren","resizeHandlers","observer","ResizeObserver","entries","entry","dataset","resizeHandlerKey","rect","contentRect","addResizeHandler","randomString","observe","removeResizeHandler","unobserve","useDimension","targetRef","debounceDuration","timeoutRef","setRect","r","clearTimeout","setTimeout","top","right","bottom","left","MapContainer","resize","MapState","attributeKey","attributes","initialAttributes","prevAttributes","attribute","toBeDeleted","difference","toBeAddedModified","whiteHalo","noneLayout","visibility","visibleLayout","theme","province","outlinePaint","labelPaint","labelLayout","district","municipality","background","rasterPaint","logoPosition","minZoom","zoom","center","tooltipOptions","closeOnClick","closeButton","offset","maxWidth","Tooltip","tooltip","regionTitle","state","IndicatorMap","selectedSourceForChoropleth","selectedSourceForBubble","choroplethMapState","bubbleMapState","choroplethMapPaint","bubbleMapPaint","hideChoropleth","hideBubble","rasterLayer","hideTooltipOnHover","hoveredRegionProperties","setHoveredRegionProperties","handleMapRegionMouseEnter","handleMapRegionMouseLeave","rasterTiles","getRasterTile","geoserverUrl","workspace","isProvinceVisible","isDistrictVisible","isMunicipalityVisible","url","MapTooltip","trackPointer","tiles","tileSize","placement","parentBCR","getBoundingClientRect","x","y","cX","innerWidth","cY","innerHeight","horizontalPosition","verticalPosition","getSegments","totalSegments","maxValue","integer","includeMinimum","colorMap","range","gap","ceil","skipValue","realLength","precision","getPrecision","sanitizedValue","toFixed","relativeLocation","generateChoroplethMapPaintAndLegend","colorDomain","minVal","fillOpacityForNoData","fillColorForNoData","Infinity","segments","segment","round","min","item","fillColor","fillOpacity","listToMap","generateBubbleMapPaintAndLegend","array","mapPaint","baseUrl","join","getRasterLegendUrl","imageUrlToDataUrl","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","result","readAsDataURL","response","open","responseType","send","rawButton","hidden","onHide","tooltipContainerRef","popupRef","initialTooltipOptions","initialTrackPointer","initialCoordinates","createElement","render","Popup","setDOMContent","regionKeySelector","region","regionLabelSelector","regionLevelOptionListKeySelector","regionLevelOptionListLabelSelector","regionLevelOptionList","RegionSelector","searchHidden","selectedRegion","setSelectedRegion","NavbarContext","setRegionLevel","regionLevelLabel","regionGetRequest","regionListPending","regionListResponse","regionLevelSelection","regionSelectInput","initialMapChildState","createContext","initialSourceChildState","absolute","abs","formatNumber","separatorShown","output","suffix","formattedNormalize","Lang","en","number","normalizeSuffix","match","substr","addSeparator","Numeral","prefix","numeral","requestOption","headers","Accept","setResponse","setPending","lastUrl","setLastUrl","controller","AbortController","myUrl","myOptions","signal","fetch","res","aborted","text","resText","resBody","JSON","parse","ok","fetchResource","abort","LoadingAnimation","loadingAnimation","Backdrop","useLayoutEffect","backdrop","inputLabel","empty","Legend","rasterLegendDataUrl","setRasterLegendDataUrl","dataUrl","rasterLegend","rasterLegendImage"],"mappings":"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","file":"js/1.aadaba6fc211e5521e87.js","sourcesContent":["import React, { useMemo, Fragment } from 'react';\nimport {\n    isNotDefined,\n    listToGroupList,\n} from '@togglecorp/fujs';\n\nimport { OptionKey } from '../types';\n\ninterface BaseProps<D, P, K extends OptionKey> {\n    data: D[];\n    keySelector(datum: D, index: number): K;\n    renderer: React.ComponentType<P>;\n    rendererClassName?: string;\n    rendererParams: (key: K, datum: D, index: number, data: D[]) => P;\n}\n\ninterface GroupOptions<D, P, K extends OptionKey, GP, GK extends OptionKey> {\n    groupComparator?: (a: GK, b: GK) => number;\n    groupKeySelector(datum: D): GK;\n    groupRenderer: React.ComponentType<GP>;\n    groupRendererClassName?: string;\n    groupRendererParams: (key: GK, index: number, data: D[]) => GP;\n    grouped: true;\n}\n\ninterface NoGroupOptions {\n    grouped?: false;\n}\n\nexport type ListProps<D, P, K extends OptionKey, GP, GK extends OptionKey> = (\n    BaseProps<D, P, K> & (GroupOptions<D, P, K, GP, GK> | NoGroupOptions)\n);\n\nexport type GroupedListProps<D, P, K extends OptionKey, GP, GK extends OptionKey> = (\n    BaseProps<D, P, K> & GroupOptions<D, P, K, GP, GK>\n);\n\nfunction hasGroup<D, P, K extends OptionKey, GP, GK extends OptionKey>(\n    props: ListProps<D, P, K, GP, GK>,\n): props is (BaseProps<D, P, K> & GroupOptions<D, P, K, GP, GK>) {\n    return !!(props as BaseProps<D, P, K> & GroupOptions<D, P, K, GP, GK>).grouped;\n}\n\nfunction GroupedList<D, P, K extends OptionKey, GP, GK extends OptionKey>(\n    props: GroupedListProps<D, P, K, GP, GK>,\n) {\n    const {\n        groupKeySelector,\n        groupComparator,\n        renderer: Renderer,\n        groupRenderer: GroupRenderer,\n        groupRendererClassName,\n        groupRendererParams,\n        data,\n        keySelector,\n        rendererParams,\n        rendererClassName,\n    } = props;\n\n    const renderListItem = (datum: D, i: number) => {\n        const key = keySelector(datum, i);\n        const extraProps = rendererParams(key, datum, i, data);\n\n        return (\n            <Renderer\n                key={key}\n                className={rendererClassName}\n                {...extraProps}\n            />\n        );\n    };\n    const renderGroup = (groupKey: GK, index: number) => {\n        const extraProps = groupRendererParams(groupKey, index, data);\n\n        return (\n            <GroupRenderer\n                key={groupKey}\n                className={groupRendererClassName}\n                {...extraProps}\n            />\n        );\n    };\n\n    const groups = useMemo(\n        () => listToGroupList(data, groupKeySelector),\n        [data, groupKeySelector],\n    );\n\n    const sortedGroupKeys = useMemo(\n        () => {\n            const keys = Object.keys(groups) as GK[];\n            return keys.sort(groupComparator);\n        },\n        [groups, groupComparator],\n    );\n\n    const children: React.ReactNode[] = [];\n    sortedGroupKeys.forEach((groupKey, i) => {\n        children.push(renderGroup(groupKey, i));\n        children.push(...groups[groupKey].map(renderListItem));\n    });\n\n    return (\n        <Fragment>\n            {children}\n        </Fragment>\n    );\n}\n\nfunction List<D, P, K extends OptionKey, GP, GK extends OptionKey>(\n    props: ListProps<D, P, K, GP, GK>,\n) {\n    const {\n        data,\n        keySelector,\n        renderer: Renderer,\n        rendererClassName,\n        rendererParams,\n    } = props;\n\n    if (isNotDefined(data)) {\n        return null;\n    }\n\n    const renderListItem = (datum: D, i: number) => {\n        const key = keySelector(datum, i);\n        const extraProps = rendererParams(key, datum, i, data);\n\n        return (\n            <Renderer\n                key={key}\n                className={rendererClassName}\n                {...extraProps}\n            />\n        );\n    };\n\n    if (!hasGroup(props)) {\n        return (\n            <Fragment>\n                {data.map(renderListItem)}\n            </Fragment>\n        );\n    }\n\n    return (\n        <GroupedList\n            {...props}\n        />\n    );\n}\n\nList.defaultProps = {\n    data: [],\n};\n\nexport default List;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"segment-input\":\"styles_segment-input_18oB8-GDfFO-noA5mYN_Wj\",\"segmentInput\":\"styles_segment-input_18oB8-GDfFO-noA5mYN_Wj\",\"input-label\":\"styles_input-label_3x-iBHiPkMTlgqi7ke8Gen\",\"inputLabel\":\"styles_input-label_3x-iBHiPkMTlgqi7ke8Gen\",\"input-container\":\"styles_input-container_27zN6nHgTz51c5Tdt_I2WW\",\"inputContainer\":\"styles_input-container_27zN6nHgTz51c5Tdt_I2WW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"styles_heading_35Hf3jGZ6vnsNKK5uxbFVT\",\"raster-legend\":\"styles_raster-legend_22wL1wGNlY06P5b8FlDfu0\",\"rasterLegend\":\"styles_raster-legend_22wL1wGNlY06P5b8FlDfu0\"};","import React, { useCallback } from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport List from '#components/List';\nimport Numeral from '#components/Numeral';\n\nimport { OptionKey } from '../types';\nimport styles from './styles.css';\n\nexport type BubbleLegendType = 'positive' | 'negative' | 'both';\n\ninterface LegendItemProps {\n    className?: string;\n    value: number;\n    radius?: number;\n    maxRadius: number;\n    color: string;\n}\n\nfunction LegendItem(props: LegendItemProps) {\n    const {\n        className,\n        value,\n        color,\n        radius = 5,\n        maxRadius = 5,\n    } = props;\n\n    return (\n        <div className={_cs(className, styles.legendItem)}>\n            <div\n                className={styles.color}\n                style={{\n                    backgroundColor: color,\n                    width: `${2 * radius}px`,\n                    height: `${2 * radius}px`,\n                    margin: `${maxRadius - radius}px`,\n                }}\n            />\n            <div className={styles.value}>\n                <Numeral\n                    value={value}\n                    normalize\n                />\n            </div>\n        </div>\n    );\n}\n\ninterface Props<T, K extends OptionKey> {\n    data: T[];\n    className?: string;\n    title?: string;\n    keySelector: (datum: T) => K;\n    radiusSelector: (datum: T) => number;\n    valueSelector: (datum: T) => number;\n    itemClassName?: string;\n    legendType: BubbleLegendType;\n    positiveColor?: string;\n    negativeColor?: string;\n    unit?: string;\n}\n\nfunction BubbleLegend<T, K extends OptionKey>(props: Props<T, K>) {\n    const {\n        className,\n        data,\n        radiusSelector,\n        valueSelector,\n        keySelector,\n        itemClassName,\n        title,\n        negativeColor,\n        positiveColor,\n        legendType,\n        unit,\n    } = props;\n\n    const legendItemRendererParams = useCallback((_: K, d: T, i: number, allData: T[]) => {\n        const radiuses = radiusSelector\n            ? allData.map(radiusSelector)\n            : [];\n\n        const maxRadius = Math.max(...radiuses);\n\n        let color = '#aeaeae';\n        if (legendType === 'positive' && positiveColor) {\n            color = positiveColor;\n        } else if (legendType === 'negative' && negativeColor) {\n            color = negativeColor;\n        }\n\n        return ({\n            value: valueSelector(d),\n            color,\n            radius: radiusSelector ? radiusSelector(d) : undefined,\n            maxRadius,\n            className: itemClassName,\n        });\n    }, [\n        radiusSelector,\n        valueSelector,\n        itemClassName,\n        negativeColor,\n        positiveColor,\n        legendType,\n    ]);\n\n    if (data.length <= 0) {\n        return null;\n    }\n\n    return (\n        <div className={_cs(styles.bubbleLegend, className)}>\n            {title && (\n                <h5 className={styles.heading}>\n                    {unit ? `${title} (${unit})` : title}\n                </h5>\n            )}\n            <List\n                data={data}\n                renderer={LegendItem}\n                keySelector={keySelector}\n                rendererParams={legendItemRendererParams}\n            />\n            {legendType === 'both' && (\n                <div className={styles.footer}>\n                    <div className={styles.negative}>\n                        <span\n                            className={styles.circle}\n                            style={{ backgroundColor: negativeColor }}\n                        />\n                        Less than 0\n                    </div>\n                    <div className={styles.positive}>\n                        <span\n                            className={styles.circle}\n                            style={{ backgroundColor: positiveColor }}\n                        />\n                        Greater than 0\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nBubbleLegend.defaultProps = {\n    data: [],\n    positiveColor: '#01665e',\n    negativeColor: '#de2d26',\n};\n\nexport default BubbleLegend;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport RawButton from '#components/RawButton';\n\nimport styles from './styles.css';\n\nfunction ToggleSwitch(props: { className?: string; value?: boolean; disabled?: boolean }) {\n    const {\n        className,\n        value,\n        disabled,\n    } = props;\n\n    return (\n        <div className={_cs(\n            styles.switch,\n            className,\n            value ? styles.on : styles.off,\n            disabled && styles.disabled,\n        )}\n        >\n            <div className={styles.knob} />\n        </div>\n    );\n}\n\ninterface Props {\n    className?: string;\n    label?: React.ReactNode;\n    onChange?: (v: boolean) => void;\n    value: boolean;\n    disabled?: boolean;\n}\n\nfunction ToggleButton(props: Props) {\n    const {\n        className,\n        label,\n        value,\n        onChange,\n        disabled,\n    } = props;\n\n    const handleClick = React.useCallback(\n        () => {\n            if (onChange) {\n                onChange(!value);\n            }\n        },\n        [onChange, value],\n    );\n\n    return (\n        <RawButton\n            className={_cs(styles.toggleButton, className)}\n            onClick={handleClick}\n            disabled={disabled}\n        >\n            <ToggleSwitch\n                value={value}\n                disabled={disabled}\n            />\n            <div className={styles.label}>\n                { label }\n            </div>\n        </RawButton>\n    );\n}\n\nexport default ToggleButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"print-details-bar\":\"styles_print-details-bar_2_WxdOB2cE1-hM7-bY05Ve\",\"printDetailsBar\":\"styles_print-details-bar_2_WxdOB2cE1-hM7-bY05Ve\",\"left-container\":\"styles_left-container_1N5oK-uD6xzd7e6GdekzA-\",\"leftContainer\":\"styles_left-container_1N5oK-uD6xzd7e6GdekzA-\",\"heading\":\"styles_heading_12Zx143pN5jKOqmCh41MM5\",\"description\":\"styles_description_35aWgBY2KcapDaEWPgIdXy\",\"right-container\":\"styles_right-container_3Xx4htUfWefdVHChh3DpoC\",\"rightContainer\":\"styles_right-container_3Xx4htUfWefdVHChh3DpoC\",\"logo\":\"styles_logo_lHLQZlWLVsjy4Yl3RO_i0\"};","import React, { useCallback } from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Button from '#components/Button';\nimport styles from './styles.css';\n\ninterface Props {\n    className?: string;\n    printMode: boolean;\n    onPrintModeChange: (printMode: boolean) => void;\n}\n\nfunction PrintButton(props: Props) {\n    const {\n        className,\n        printMode,\n        onPrintModeChange,\n    } = props;\n\n    const handlePrintPreviewClick = useCallback(() => {\n        onPrintModeChange(true);\n    }, [onPrintModeChange]);\n\n    const handlePrintPreviewCancelClick = useCallback(() => {\n        onPrintModeChange(false);\n    }, [onPrintModeChange]);\n\n    const handlePrintClick = useCallback(() => {\n        window.print();\n    }, []);\n\n    return (\n        <div className={_cs(styles.printContainer, className)}>\n            {printMode ? (\n                <>\n                    <Button\n                        className={styles.print}\n                        onClick={handlePrintClick}\n                        variant=\"primary\"\n                    >\n                        Print\n                    </Button>\n                    <Button onClick={handlePrintPreviewCancelClick}>\n                        Cancel\n                    </Button>\n                </>\n            ) : (\n                <Button\n                    onClick={handlePrintPreviewClick}\n                    variant=\"primary\"\n                >\n                    Print Preview\n                </Button>\n            )}\n        </div>\n    );\n}\n\nexport default PrintButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-input\":\"styles_text-input_3n_WeWGFtrfYvRFM9rZvMq\",\"textInput\":\"styles_text-input_3n_WeWGFtrfYvRFM9rZvMq\",\"clear-button\":\"styles_clear-button_3dJFsnjRZugnx3cV9Tw-xp\",\"clearButton\":\"styles_clear-button_3dJFsnjRZugnx3cV9Tw-xp\",\"dropdown-container\":\"styles_dropdown-container_3ob8R9lVp2tao9vuqZEkg0\",\"dropdownContainer\":\"styles_dropdown-container_3ob8R9lVp2tao9vuqZEkg0\",\"message\":\"styles_message_2A-85WgLB8ayXizlWoVla\",\"group\":\"styles_group_1tzNCnRwptat1jK3-6tYIo\",\"option\":\"styles_option_s3Liq7BLeqPa5yO430e8l\",\"selected\":\"styles_selected_3fiOlBovvee1nMirvEJHOZ\"};","import { isDefined } from '@togglecorp/fujs';\nimport {\n    MultiResponse,\n    RegionLevelOption,\n    MapStateItem,\n} from '#types';\n\nimport { apiEndPoint } from '#utils/constants';\n\nimport useRequest from './useRequest';\n\ninterface IndicatorValue {\n    code: string;\n    value: number;\n}\n\nfunction useMapStateForIndicator(\n    regionLevel: RegionLevelOption,\n    selectedIndicator: number | undefined,\n): [boolean, MapStateItem[]] {\n    let regionIndicatorUrl: string | undefined;\n    if (isDefined(selectedIndicator) && String(selectedIndicator) !== '-1') {\n        switch (regionLevel) {\n            case 'municipality':\n                regionIndicatorUrl = `${apiEndPoint}/core/municipality-indicator/?indicator_id=${selectedIndicator}`;\n                break;\n            case 'district':\n                regionIndicatorUrl = `${apiEndPoint}/core/district-indicator/${selectedIndicator}/`;\n                break;\n            case 'province':\n                regionIndicatorUrl = `${apiEndPoint}/core/province-indicator/${selectedIndicator}/`;\n                break;\n            default:\n                break;\n        }\n    }\n\n    const [\n        regionIndicatorListPending,\n        regionIndicatorListResponse,\n    ] = useRequest<MultiResponse<IndicatorValue>>(regionIndicatorUrl);\n\n    let mapState: MapStateItem[] = [];\n    if (regionIndicatorListResponse && isDefined(selectedIndicator)) {\n        mapState = regionIndicatorListResponse.results.map(d => ({\n            id: +d.code,\n            value: d.value,\n        }));\n    }\n\n    return [regionIndicatorListPending, mapState];\n}\n\nexport default useMapStateForIndicator;\n","import { useEffect } from 'react';\n\nfunction useBlurEffect(\n    shouldWatch: boolean,\n    callback: (clickedInside: boolean, e: MouseEvent) => void,\n    elementRef: React.RefObject<HTMLElement>,\n    parentRef: React.RefObject<HTMLElement>,\n) {\n    useEffect(\n        () => {\n            if (!shouldWatch) {\n                return () => {};\n            }\n\n            const handleDocumentClick = (e: MouseEvent) => {\n                const { current: element } = elementRef;\n                const { current: parent } = parentRef;\n\n                const isElementOrContainedInElement = element\n                    ? element === e.target || element.contains(e.target as HTMLElement)\n                    : false;\n                const isParentOrContainedInParent = parent\n                    ? parent === e.target || parent.contains(e.target as HTMLElement)\n                    : false;\n\n                const clickedInside = isElementOrContainedInElement || isParentOrContainedInParent;\n\n                callback(clickedInside, e);\n            };\n\n            document.addEventListener('click', handleDocumentClick);\n\n            return () => {\n                document.removeEventListener('click', handleDocumentClick);\n            };\n        },\n        [shouldWatch, callback, elementRef, parentRef],\n    );\n}\nexport default useBlurEffect;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nfunction Portal(props: Props) {\n    const { children } = props;\n    return (\n        ReactDOM.createPortal(\n            children,\n            document.body,\n        )\n    );\n}\n\nexport default Portal;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.css';\n\nexport interface Props<T> extends Omit<React.HTMLProps<HTMLInputElement>, 'onChange' | 'onBlur'>{\n    className?: string;\n    onChange: (value: string, name: string, e: React.FormEvent<HTMLInputElement>) => void;\n    onBlur?: (name: string, e: React.FormEvent<HTMLInputElement>) => void;\n    elementRef?: React.RefObject<HTMLInputElement>;\n}\n\nfunction RawInput<T=string>(props: Props<T>) {\n    const {\n        className,\n        onChange,\n        onBlur,\n        elementRef,\n        ...otherProps\n    } = props;\n\n    const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n        const {\n            currentTarget: {\n                value,\n                name,\n            },\n        } = e;\n\n        onChange(\n            value,\n            name,\n            e,\n        );\n    };\n\n    const handleBlur = (e: React.FormEvent<HTMLInputElement>) => {\n        const {\n            currentTarget: {\n                name,\n            },\n        } = e;\n\n        if (onBlur) {\n            onBlur(\n                name,\n                e,\n            );\n        }\n    };\n    return (\n        <input\n            ref={elementRef}\n            onChange={handleChange}\n            onBlur={onBlur ? handleBlur : undefined}\n            className={_cs(className, styles.rawInput)}\n            {...otherProps}\n        />\n    );\n}\n\nexport default RawInput;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport RawInput, { Props as RawInputProps } from '../RawInput';\nimport styles from './styles.css';\n\nexport interface Props<T> extends Omit<RawInputProps<T>, 'elementRef'> {\n    className?: string;\n    icons?: React.ReactNode;\n    actions?: React.ReactNode;\n    inputRef?: React.RefObject<HTMLInputElement>;\n    elementRef?: React.RefObject<HTMLDivElement>;\n}\n\nfunction Input<T>(props: Props<T>) {\n    const {\n        elementRef,\n        className,\n        label,\n        icons,\n        actions,\n        inputRef,\n        ...otherProps\n    } = props;\n\n    return (\n        <div\n            ref={elementRef}\n            className={_cs(styles.inputContainer, className)}\n        >\n            { label && (\n                <div className={styles.label}>\n                    { label }\n                </div>\n            )}\n            <div className={styles.main}>\n                { icons && (\n                    <div className={styles.icons}>\n                        { icons }\n                    </div>\n                )}\n                <RawInput\n                    elementRef={inputRef}\n                    className={styles.input}\n                    {...otherProps}\n                />\n                { actions && (\n                    <div className={styles.actions}>\n                        { actions }\n                    </div>\n                )}\n            </div>\n            {/*\n            <div className={styles.extra}>\n                extra\n            </div>\n            */}\n        </div>\n    );\n}\n\nexport default Input;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Input, { Props as InputProps } from '../Input';\nimport styles from './styles.css';\n\nexport interface Props<T> extends InputProps<T> {\n    className?: string;\n}\n\nfunction TextInput<T>(props: Props<T>) {\n    const {\n        className,\n        ...otherProps\n    } = props;\n\n    return (\n        <Input\n            type=\"text\"\n            className={_cs(styles.textInput, className)}\n            {...otherProps}\n        />\n    );\n}\n\nexport default TextInput;\n","import React, { useMemo, useRef, useCallback, useEffect } from 'react';\n// import { IoIosSearch } from 'react-icons/io';\nimport { IoIosClose } from 'react-icons/io';\nimport {\n    _cs,\n    caseInsensitiveSubmatch,\n    compareStringSearch,\n    isNotDefined,\n    isFalsyString,\n    isDefined,\n} from '@togglecorp/fujs';\n\nimport { getFloatPlacement } from '#utils/common';\nimport useBlurEffect from '#hooks/useBlurEffect';\n\nimport List from '#components/List';\nimport Button from '#components/Button';\nimport Portal from '#components/Portal';\nimport TextInput from '#components/TextInput';\nimport Label from '#components/Label';\nimport RawButton, { Props as RawButtonProps } from '#components/RawButton';\n\nimport styles from './styles.css';\n\nfunction Option(props: RawButtonProps & { selected: boolean }) {\n    const divRef = useRef<HTMLButtonElement>(null);\n    const focusedByMouse = useRef(false);\n\n    const { selected, ...otherProps } = props;\n\n    useEffect(\n        () => {\n            if (selected && !focusedByMouse.current && divRef.current) {\n                divRef.current.scrollIntoView({\n                    // behavior: 'smooth',\n                    block: 'center',\n                });\n            }\n        },\n        [selected],\n    );\n\n    const handleMouseMove = useCallback(\n        () => {\n            focusedByMouse.current = true;\n        },\n        [],\n    );\n\n    const handleMouseLeave = useCallback(\n        () => {\n            focusedByMouse.current = false;\n        },\n        [],\n    );\n\n    return (\n        <RawButton\n            elementRef={divRef}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            {...otherProps}\n        />\n    );\n}\n\ninterface DropdownProps {\n    className?: string;\n    parentRef: React.RefObject<HTMLElement>;\n    elementRef: React.RefObject<HTMLDivElement>;\n    children: React.ReactNode;\n}\nfunction Dropdown(props: DropdownProps) {\n    const {\n        parentRef,\n        elementRef,\n        children,\n        className,\n    } = props;\n\n    const style = getFloatPlacement(parentRef);\n\n    return (\n        <div\n            ref={elementRef}\n            style={style}\n            className={_cs(styles.dropdownContainer, className)}\n        >\n            { children }\n        </div>\n    );\n}\n\ninterface GroupNameProps {\n    name: string;\n    className?: string;\n}\nfunction GroupName(props: GroupNameProps) {\n    const {\n        name,\n        className,\n    } = props;\n\n    return (\n        <div className={className}>\n            {name}\n        </div>\n    );\n}\n\ninterface Props<T, K> {\n    className?: string;\n    dropdownContainerClassName?: string;\n    label?: string;\n    options: T[] | undefined;\n    optionLabelSelector: (d: T) => string;\n    optionKeySelector: (d: T) => K;\n    value: K | undefined;\n    onChange: (d: K | undefined) => void;\n    disabled?: boolean;\n    placeholder?: string;\n    hideLabel?: boolean;\n    error?: string;\n    labelRightComponent?: React.ReactNode;\n    labelRightComponentClassName?: string;\n\n    groupKeySelector?: (d: T) => string;\n}\n\nfunction SelectInput<T, K extends string | number>(props: Props<T, K>) {\n    const {\n        className,\n        dropdownContainerClassName,\n        options,\n        optionLabelSelector,\n        optionKeySelector,\n        value,\n        onChange,\n        disabled,\n        placeholder = 'Select an option',\n        groupKeySelector,\n        hideLabel,\n        label,\n        error,\n        labelRightComponent,\n        labelRightComponentClassName,\n    } = props;\n\n    const inputContainerRef = React.useRef<HTMLDivElement>(null);\n    const inputElementRef = React.useRef<HTMLInputElement>(null);\n    const dropdownRef = React.useRef<HTMLDivElement>(null);\n\n    const [showDropdown, setShowDropdown] = React.useState(false);\n    const [searchValue, setSearchValue] = React.useState<string | undefined>();\n\n    const inputValue = useMemo(\n        () => {\n            if (isNotDefined(value)) {\n                return '';\n            }\n            const option = options?.find(o => optionKeySelector(o) === value);\n            if (isNotDefined(option)) {\n                return '';\n            }\n            return optionLabelSelector(option);\n        },\n        [optionKeySelector, optionLabelSelector, options, value],\n    );\n\n    const hideDropdownOnBlur = React.useCallback(\n        (isInsideClick: boolean) => {\n            if (!isInsideClick) {\n                setShowDropdown(false);\n                setSearchValue(undefined);\n            }\n        },\n        [setShowDropdown],\n    );\n\n    useBlurEffect(showDropdown, hideDropdownOnBlur, dropdownRef, inputContainerRef);\n\n    const filteredOptions = React.useMemo(\n        () => {\n            if (!showDropdown) {\n                return undefined;\n            }\n            if (isFalsyString(searchValue)) {\n                return options;\n            }\n\n            const newOptions = options\n                ?.filter(option => (\n                    caseInsensitiveSubmatch(optionLabelSelector(option), searchValue)\n                ))\n                .sort((a, b) => compareStringSearch(\n                    optionLabelSelector(a),\n                    optionLabelSelector(b),\n                    searchValue,\n                ));\n\n            return newOptions;\n        },\n        [showDropdown, options, optionLabelSelector, searchValue],\n    );\n\n    const handleOptionClick = React.useCallback(\n        (optionKey: string | undefined) => {\n            const option = options?.find(o => String(optionKeySelector(o)) === optionKey);\n            if (!option) {\n                console.error('There is some problem');\n                return;\n            }\n\n            setShowDropdown(false);\n            setSearchValue(undefined);\n\n            onChange(optionKeySelector(option));\n        },\n        [onChange, options, optionKeySelector],\n    );\n\n    const handleInputClick = React.useCallback(\n        () => {\n            setShowDropdown(true);\n\n            const { current: inputContainer } = inputElementRef;\n            if (inputContainer) {\n                inputContainer.select();\n            }\n        },\n        [],\n    );\n\n    const handleInputValueChange = React.useCallback(\n        (newInputValue: string) => {\n            setSearchValue(newInputValue);\n\n            setShowDropdown(true);\n        },\n        [],\n    );\n\n    const handleClearClick = React.useCallback(\n        () => {\n            onChange(undefined);\n        },\n        [onChange],\n    );\n\n    const groupRendererParams = useCallback(\n        (groupKey: string) => ({\n            name: groupKey,\n            className: styles.group,\n        }),\n        [],\n    );\n\n    const rendererParams = useCallback(\n        (key: K, datum: T) => {\n            const selected = key === value;\n            return {\n                selected,\n                className: _cs(styles.option, selected && styles.selected),\n                name: String(key),\n                onClick: handleOptionClick,\n                disabled: disabled || selected,\n                children: optionLabelSelector(datum),\n            };\n        },\n        [disabled, handleOptionClick, optionLabelSelector, value],\n    );\n\n    return (\n        <div\n            className={_cs(className, styles.selectInput)}\n            title={label}\n        >\n            {!hideLabel && (\n                <Label\n                    className={styles.label}\n                    disabled={disabled}\n                    error={!!error}\n                    rightComponent={labelRightComponent}\n                    rightComponentClassName={labelRightComponentClassName}\n                >\n                    {label}\n                </Label>\n            )}\n            <TextInput\n                className={styles.textInput}\n                elementRef={inputContainerRef}\n                inputRef={inputElementRef}\n                onClick={handleInputClick}\n                value={isDefined(searchValue) ? searchValue : inputValue}\n                onChange={handleInputValueChange}\n                placeholder={placeholder}\n                disabled={disabled}\n                actions={value && (\n                    <Button\n                        className={styles.clearButton}\n                        transparent\n                        name=\"close\"\n                        onClick={handleClearClick}\n                        icons={(\n                            <IoIosClose />\n                        )}\n                    />\n                )}\n            />\n            { showDropdown && (\n                <Portal>\n                    <Dropdown\n                        elementRef={dropdownRef}\n                        className={dropdownContainerClassName}\n                        parentRef={inputContainerRef}\n                    >\n                        {(!filteredOptions || filteredOptions.length <= 0) && (\n                            <div className={styles.message}>\n                                No option available\n                            </div>\n                        )}\n                        {groupKeySelector ? (\n                            <List\n                                data={filteredOptions}\n                                renderer={Option}\n                                keySelector={optionKeySelector}\n                                rendererParams={rendererParams}\n                                grouped\n                                groupKeySelector={groupKeySelector}\n                                groupRendererParams={groupRendererParams}\n                                groupRenderer={GroupName}\n                            />\n                        ) : (\n                            <List\n                                data={filteredOptions}\n                                renderer={Option}\n                                keySelector={optionKeySelector}\n                                rendererParams={rendererParams}\n                            />\n                        )}\n                    </Dropdown>\n                </Portal>\n            )}\n        </div>\n    );\n}\n\nexport default SelectInput;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.css';\n\nexport interface Props {\n    onClick?: () => void;\n    label?: string;\n    isActive?: boolean;\n    className?: string;\n    disabled?: boolean;\n}\n\nconst Option = ({\n    onClick,\n    label,\n    isActive,\n    className,\n    disabled,\n}: Props) => (\n    <div\n        role=\"presentation\"\n        onClick={disabled ? undefined : onClick}\n        className={_cs(\n            className,\n            styles.option,\n            isActive && styles.active,\n            disabled && styles.disabled,\n        )}\n    >\n        { label }\n    </div>\n);\n\nexport default Option;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Label from '#components/Label';\n\nimport Option from './Option';\nimport styles from './styles.css';\n\ninterface Props<T, V> {\n    className?: string;\n    options?: T[];\n    optionKeySelector: (d: T) => V;\n    optionLabelSelector: (d: T) => string;\n    renderer?: typeof Option;\n    // renderer?: React.ReactNode;\n    label?: React.ReactNode;\n    value?: V;\n    onChange?: (value: V, name: string | undefined) => void;\n    name?: string;\n    disabled?: boolean;\n    hideLabel?: boolean;\n    error?: string;\n    labelRightComponent?: React.ReactNode;\n    labelRightComponentClassName?: string;\n}\n\n\nfunction SegmentInput<T, V extends string | number>(props: Props<T, V>) {\n    const {\n        className,\n        options = [],\n        optionKeySelector,\n        optionLabelSelector,\n        renderer,\n        label,\n        value,\n        hideLabel,\n        labelRightComponent,\n        labelRightComponentClassName,\n        error,\n        disabled,\n        onChange,\n        name,\n    } = props;\n\n    return (\n        <div className={_cs(className, styles.segmentInput)}>\n            {!hideLabel && (\n                <Label\n                    className={styles.label}\n                    disabled={disabled}\n                    error={!!error}\n                    rightComponent={labelRightComponent}\n                    rightComponentClassName={labelRightComponentClassName}\n                >\n                    {label}\n                </Label>\n            )}\n            <div className={styles.inputContainer}>\n                { options.map((option) => {\n                    const key = optionKeySelector(option);\n                    const isActive = key === value;\n\n                    const RenderOption = renderer || Option;\n\n                    const optionLabel = optionLabelSelector\n                        ? optionLabelSelector(option)\n                        : undefined;\n\n                    return (\n                        <RenderOption\n                            key={key}\n                            onClick={onChange ? (() => onChange(key, name)) : undefined}\n                            isActive={isActive}\n                            label={optionLabel}\n                        />\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default SegmentInput;\n","import React from 'react';\nimport { _cs, isDefined } from '@togglecorp/fujs';\n\nimport Numeral from '#components/Numeral';\n\nimport styles from './styles.css';\n\ninterface LegendElementProps {\n    color: string;\n    value: string | number;\n    opacity?: number;\n}\n\nfunction LegendElement(props: LegendElementProps) {\n    const {\n        color,\n        value,\n        opacity = 1,\n    } = props;\n\n    return (\n        <div\n            className={styles.legendElement}\n            key={color}\n        >\n            <div\n                className={styles.color}\n                style={{ backgroundColor: color, opacity }}\n            />\n            <div className={styles.value}>\n                {typeof value === 'number' && (\n                    <Numeral\n                        value={value}\n                        normalize\n                    />\n                )}\n                {typeof value === 'string' && (\n                    value\n                )}\n            </div>\n        </div>\n    );\n}\n\ninterface ChoroplethLegend {\n    minValue: number | string;\n    legend: {[key: string]: number | string};\n    className?: string;\n    title?: string;\n    opacity?: number;\n    unit?: string;\n}\nfunction ChoroplethLegend(\n    {\n        title,\n        minValue,\n        legend,\n        className,\n        opacity,\n        unit,\n    }: ChoroplethLegend,\n) {\n    const colors = Object.keys(legend);\n    if (colors.length <= 0) {\n        return null;\n    }\n\n    return (\n        <div className={_cs(styles.legendContainer, className)}>\n            {title && (\n                <h5 className={styles.heading}>\n                    {unit ? `${title} (${unit})` : title}\n                </h5>\n            )}\n            <div className={styles.choroplethLegend}>\n                {isDefined(minValue) && (\n                    <LegendElement\n                        value={minValue}\n                        color=\"white\"\n                        opacity={0}\n                    />\n                )}\n                {colors.map((color) => {\n                    const value = legend[color];\n                    return (\n                        <LegendElement\n                            key={color}\n                            value={value}\n                            color={color}\n                            opacity={opacity}\n                        />\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default ChoroplethLegend;\n","import { useEffect, useRef } from 'react';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function getLayerName(sourceKey: string, layerKey: string) {\n    return `${sourceKey}›${layerKey}`;\n}\n\nexport function usePrevious<T>(value: T, initialValue: T) {\n    const ref = useRef<T>(initialValue);\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n","import React, { useContext, useEffect, useState, useCallback, useRef } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport produce from 'immer';\nimport { Obj } from '@togglecorp/fujs';\n\nimport { getLayerName } from '../utils';\nimport { MapChildContext, SourceChildContext } from '../context';\nimport { Layer } from '../type';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\nfunction useCounter(initialValue = 0): [() => void, number] {\n    const [value, updateValue] = useState(initialValue);\n    const increaseValue = useCallback(() => {\n        updateValue(v => v + 1);\n    }, []);\n    return [increaseValue, value];\n}\n\ninterface Props {\n    children?: React.ReactNode | null; // FIXME typings\n    sourceOptions: mapboxgl.AnySourceData;\n    sourceKey: string;\n\n    geoJson?: GeoJSON.Feature<GeoJSON.Geometry>\n    | GeoJSON.FeatureCollection<GeoJSON.Geometry>\n    | string;\n    createMarkerElement?: (properties: object) => HTMLElement;\n}\n\nconst MapSource = (props: Props) => {\n    const {\n        sourceOptions,\n        sourceKey,\n        children,\n        geoJson,\n        createMarkerElement,\n    } = props;\n\n    const {\n        map,\n        mapStyle,\n        setSource,\n        getSource,\n        removeSource,\n        isSourceDefined,\n        isMapDestroyed,\n        debug,\n    } = useContext(MapChildContext);\n\n    const [initialDebug] = useState(debug);\n    const [forceUpdate] = useCounter(0);\n    const [initialGeoJson] = useState(geoJson);\n    const [initialSourceOptions] = useState(sourceOptions);\n\n    // Add source in mapboxgl and notify addition to parent\n    useEffect(\n        () => {\n            if (!map || !sourceKey || !mapStyle) {\n                return noop;\n            }\n\n            const options = initialSourceOptions.type === 'geojson'\n                ? { ...initialSourceOptions, data: initialGeoJson }\n                : initialSourceOptions;\n\n            if (initialDebug) {\n                console.warn(`Creating new source: ${sourceKey}`, options);\n            }\n            try {\n                map.addSource(sourceKey, options);\n            } catch (e) {\n                console.error(e);\n            }\n\n            const destroy = () => {\n                const source = getSource(sourceKey);\n                if (!source) {\n                    // console.error(`No source named: ${sourceKey}`);\n                    return;\n                }\n\n                Object.entries(source.layers).forEach(([_, layer]) => {\n                    layer.destroy();\n                });\n                removeSource(sourceKey);\n            };\n\n            setSource({ name: sourceKey, destroy, layers: {} });\n            forceUpdate();\n\n            return destroy;\n        },\n        [\n            map, mapStyle, sourceKey,\n            forceUpdate,\n            getSource, removeSource, setSource,\n            initialGeoJson, initialSourceOptions, initialDebug,\n        ],\n    );\n\n    // Handle geoJson change\n    useEffect(\n        () => {\n            if (!map || !sourceKey || !geoJson || !mapStyle || geoJson === initialGeoJson) {\n                return;\n            }\n            const source = map.getSource(sourceKey);\n            if (source.type === 'geojson') {\n                if (initialDebug) {\n                    console.warn(`Setting source geojson: ${sourceKey}`);\n                }\n                source.setData(geoJson);\n            }\n        },\n        [map, mapStyle, sourceKey, geoJson, initialGeoJson, initialDebug],\n    );\n\n    const markers = useRef<Obj<mapboxgl.Marker>>({});\n    const markersOnScreen = useRef<Obj<mapboxgl.Marker>>({});\n\n    const updateMarkers = useCallback(\n        () => {\n            if (!map || !createMarkerElement || !sourceKey) {\n                return;\n            }\n            const newMarkers: Obj<mapboxgl.Marker> = {};\n            const features = map.querySourceFeatures(sourceKey);\n\n            features.forEach((feature) => {\n                if (feature.geometry.type !== 'Point') {\n                    return;\n                }\n                const {\n                    geometry: {\n                        coordinates,\n                    },\n                    properties,\n                } = feature;\n                if (!properties || !properties.cluster) {\n                    return;\n                }\n                const { cluster_id: clusterId } = properties;\n\n\n                let marker = markers.current[clusterId];\n                if (!marker) {\n                    const el = createMarkerElement(properties);\n                    marker = new mapboxgl.Marker({\n                        element: el,\n                    }).setLngLat(coordinates as mapboxgl.LngLatLike);\n\n                    markers.current[clusterId] = marker;\n                }\n                newMarkers[clusterId] = marker;\n\n                if (!markersOnScreen.current[clusterId]) {\n                    marker.addTo(map);\n                }\n            });\n\n            Object.keys(markersOnScreen.current).forEach((markerId) => {\n                if (!newMarkers[markerId]) {\n                    markersOnScreen.current[markerId].remove();\n                }\n            });\n\n            markersOnScreen.current = newMarkers;\n        },\n        [map, createMarkerElement, sourceKey],\n    );\n\n    useEffect(\n        () => {\n            if (!map || !sourceKey || !mapStyle || !geoJson || !createMarkerElement) {\n                return noop;\n            }\n\n            /*\n            const handleData = (e: mapboxgl.EventData) => {\n                if (e.sourceId !== sourceKey || !e.isSourceLoaded) {\n                    return;\n                }\n                updateMarkers();\n            };\n            map.on('data', handleData);\n            */\n            map.on('move', updateMarkers);\n            map.on('moveend', updateMarkers);\n\n            return () => {\n                // map.off('data', handleData);\n                map.on('move', updateMarkers);\n                map.on('moveend', updateMarkers);\n            };\n        },\n        [map, sourceKey, mapStyle, createMarkerElement, updateMarkers, geoJson],\n    );\n\n    useEffect(\n        () => {\n            if (!map || !sourceKey || !mapStyle || !geoJson || !createMarkerElement) {\n                return noop;\n            }\n\n            const interval = setInterval(updateMarkers, 1000);\n\n            return () => {\n                clearInterval(interval);\n            };\n        },\n        [map, sourceKey, mapStyle, createMarkerElement, updateMarkers, geoJson],\n    );\n\n    const getLayer = useCallback(\n        (layerKey: string) => {\n            const source = getSource(sourceKey);\n            if (!source) {\n                return undefined;\n            }\n            return source.layers[layerKey];\n        },\n        [sourceKey, getSource],\n    );\n\n    const setLayer = useCallback(\n        (name: string, method: (l: Layer | undefined) => (Layer | undefined)) => {\n            // const { name } = layer;\n            const source = getSource(sourceKey);\n            if (!source) {\n                console.error(`No source named: ${sourceKey}`);\n                return;\n            }\n            // console.warn(`Registering layer: ${name}`);\n            const newSource = produce(source, (safeSource) => {\n                const value = method(source.layers[name]);\n                if (value !== undefined) {\n                    // eslint-disable-next-line no-param-reassign\n                    safeSource.layers[name] = value;\n                } else {\n                    // eslint-disable-next-line no-param-reassign\n                    delete safeSource.layers[name];\n                }\n            });\n            setSource(newSource);\n        },\n        [sourceKey, getSource, setSource],\n    );\n\n    const removeLayer = useCallback(\n        (layerKey: string) => {\n            const source = getSource(sourceKey);\n            if (!source) {\n                console.error(`No source named: ${sourceKey}`);\n                return;\n            }\n\n            const layer = source.layers[layerKey];\n            if (!layer) {\n                console.error(`No layer named: ${layerKey}`, source);\n                return;\n            }\n\n            // NOTE: check if map is dis-mounted?\n            if (map) {\n                const id = getLayerName(sourceKey, layerKey);\n                if (initialDebug) {\n                    console.warn(`Removing layer: ${id}`);\n                }\n                map.removeLayer(id);\n            }\n\n            // console.warn(`Registering layer: ${layerKey}`);\n            const newSource = produce(source, (safeSource) => {\n                // eslint-disable-next-line no-param-reassign\n                delete safeSource.layers[layerKey];\n            });\n\n            setSource(newSource);\n        },\n        [map, sourceKey, getSource, setSource, initialDebug],\n    );\n\n    if (!isSourceDefined(sourceKey)) {\n        return null;\n    }\n\n    const childrenProps = {\n        map,\n        mapStyle,\n        sourceKey,\n        getLayer,\n        setLayer,\n        removeLayer,\n        isSourceDefined,\n        isMapDestroyed,\n        debug: initialDebug,\n    };\n\n    return (\n        <SourceChildContext.Provider value={childrenProps}>\n            {children}\n        </SourceChildContext.Provider>\n    );\n};\n\n\nMapSource.defaultProps = {\n};\n\nexport default MapSource;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport dfidLogo from '#resources/DfID-logo.svg';\n\nimport styles from './styles.css';\n\ninterface Props {\n    className?: string;\n    title?: string;\n    description?: string;\n    show: boolean;\n}\n\nfunction PrintDetailsBar(props: Props) {\n    const {\n        className,\n        title,\n        description,\n        show,\n    } = props;\n\n    if (!show) {\n        return null;\n    }\n\n    return (\n        <div className={_cs(styles.printDetailsBar, className)}>\n            <div className={styles.leftContainer}>\n                <h3 className={styles.heading}>\n                    {title}\n                </h3>\n                <span className={styles.description}>\n                    {description}\n                </span>\n            </div>\n            <div className={styles.rightContainer}>\n                <img\n                    className={styles.logo}\n                    src={dfidLogo}\n                    alt=\"DFID\"\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default PrintDetailsBar;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport RawButton, { Props as RawButtonProps } from '../RawButton';\nimport LoadingAnimation from '#components/LoadingAnimation';\nimport Backdrop from '#components/Backdrop';\n\n/*\neslint css-modules/no-unused-class: [\n    1,\n    {\n        markAsUsed: [\n            'accent',\n            'danger',\n            'default',\n            'primary',\n            'success'\n            'warning',\n        ],\n        camelCase: true\n    }\n]\n*/\nimport styles from './styles.css';\n\nexport type ButtonVariant = (\n    'accent'\n    | 'danger'\n    | 'default'\n    | 'primary'\n    | 'success'\n    | 'warning'\n);\n\n// TODO:\n// 1. implement small, medium, big sizes\n// 2. implement outline button\nexport interface Props extends RawButtonProps {\n    variant: ButtonVariant;\n    children?: React.ReactNode;\n    className?: string;\n    disabled?: boolean;\n    pending?: boolean;\n    transparent: boolean;\n    icons?: React.ReactNode;\n}\n\nfunction Button(props: Props) {\n    const {\n        variant,\n        className: classNameFromProps,\n        disabled,\n        transparent,\n        type,\n        onClick,\n        pending,\n        children,\n        icons,\n        ...otherProps\n    } = props;\n\n    const buttonClassName = _cs(\n        classNameFromProps,\n        'button',\n        styles.button,\n        variant,\n        styles[variant],\n        transparent && 'transparent',\n        transparent && styles.transparent,\n    );\n\n    return (\n        <RawButton\n            className={buttonClassName}\n            disabled={pending || disabled || !onClick}\n            onClick={onClick}\n            type={type}\n            {...otherProps}\n        >\n            { pending && (\n                <Backdrop className={styles.loadingBackdrop}>\n                    <LoadingAnimation />\n                </Backdrop>\n            )}\n            { icons && (\n                <div className={styles.icons}>\n                    { icons }\n                </div>\n            )}\n            <div className={styles.children}>\n                { children }\n            </div>\n        </RawButton>\n\n    );\n}\n\nconst defaultVariant: ButtonVariant = 'default';\nButton.defaultProps = {\n    variant: defaultVariant,\n    disabled: false,\n    pending: false,\n    transparent: false,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"raw-button\":\"styles_raw-button_1Q3tbYNiRTcqTas-jBjPeb\",\"rawButton\":\"styles_raw-button_1Q3tbYNiRTcqTas-jBjPeb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-input\":\"styles_text-input_1y1umUMaxpsV7VofvsJOPW\",\"textInput\":\"styles_text-input_1y1umUMaxpsV7VofvsJOPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numeral\":\"styles_numeral_WRrNBYx5bGGzWw9UjqfRn\"};","import { useContext, useEffect, useState, useRef } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nimport { getLayerName } from '../utils';\nimport { SourceChildContext } from '../context';\n// import { Layer } from '../type';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\ntype Paint = mapboxgl.BackgroundPaint\n| mapboxgl.FillPaint\n| mapboxgl.FillExtrusionPaint\n| mapboxgl.LinePaint\n| mapboxgl.SymbolPaint\n| mapboxgl.RasterPaint\n| mapboxgl.CirclePaint\n| mapboxgl.HeatmapPaint\n| mapboxgl.HillshadePaint;\n\ninterface Props {\n    layerKey: string;\n    layerOptions: Omit<mapboxgl.Layer, 'id'>;\n    onClick?: (\n        feature: mapboxgl.MapboxGeoJSONFeature,\n        lngLat: mapboxgl.LngLat,\n        point: mapboxgl.Point,\n        map: mapboxgl.Map,\n    ) => boolean | undefined;\n    onDoubleClick?: (\n        feature: mapboxgl.MapboxGeoJSONFeature,\n        lngLat: mapboxgl.LngLat,\n        point: mapboxgl.Point,\n        map: mapboxgl.Map,\n    ) => boolean | undefined;\n    // Only called for topmost layer\n    onMouseEnter?: (\n        feature: mapboxgl.MapboxGeoJSONFeature,\n        lngLat: mapboxgl.LngLat,\n        point: mapboxgl.Point,\n        map: mapboxgl.Map,\n    ) => void;\n    onMouseLeave?: (map: mapboxgl.Map) => void;\n    beneath?: string;\n    onAnimationFrame?: (timestamp: number) => Paint | undefined;\n}\n\nfunction removeUndefined<T extends object>(obj: T) {\n    const cleanNewLayerOptions: any = {};\n    Object.keys(obj).forEach((key) => {\n        if (key && (obj as any)[key]) {\n            cleanNewLayerOptions[key] = (obj as any)[key];\n        }\n    });\n    return cleanNewLayerOptions as T;\n}\n\nconst MapLayer = (props: Props) => {\n    const {\n        layerKey,\n        layerOptions,\n        onClick,\n        onDoubleClick,\n        onMouseEnter,\n        onMouseLeave,\n        beneath,\n        onAnimationFrame,\n    } = props;\n\n    const {\n        map,\n        mapStyle,\n\n        sourceKey,\n\n        setLayer,\n        removeLayer,\n        getLayer,\n        debug,\n    } = useContext(SourceChildContext);\n\n    const [initialLayerOptions] = useState(layerOptions);\n    const [initialBeneath] = useState(beneath);\n    const [initialDebug] = useState(debug);\n\n    const animationKeyRef = useRef<number | undefined>();\n\n    // Add layer in mapboxgl\n    useEffect(\n        () => {\n            if (!map || !sourceKey || !layerKey) {\n                return noop;\n            }\n            const id = getLayerName(sourceKey, layerKey);\n\n            if (initialDebug) {\n                console.warn(`Creating new layer: ${id}`);\n            }\n\n            const newLayerOptions = removeUndefined({\n                ...initialLayerOptions,\n                id,\n                source: sourceKey,\n            });\n\n            map.addLayer(\n                newLayerOptions,\n                initialBeneath,\n            );\n\n            const destroy = () => {\n                const layer = getLayer(layerKey);\n                if (!layer) {\n                    // console.error(`No layer named: ${id}`);\n                    return;\n                }\n                removeLayer(layerKey);\n            };\n\n            setLayer(\n                layerKey,\n                () => ({\n                    name: layerKey,\n                    destroy,\n                }),\n            );\n\n            return destroy;\n        },\n        [\n            map, mapStyle, sourceKey, layerKey,\n            initialLayerOptions, initialBeneath, initialDebug,\n            getLayer, removeLayer, setLayer,\n        ],\n    );\n\n    // Notify modification on layer\n    useEffect(\n        () => {\n            if (!map || !sourceKey || !layerKey) {\n                return;\n            }\n            setLayer(\n                layerKey,\n                layer => layer && ({\n                    ...layer,\n                    onClick,\n                    onDoubleClick,\n                    onMouseEnter,\n                    onMouseLeave,\n                }),\n            );\n        },\n        [\n            map, sourceKey, layerKey,\n            onClick, onDoubleClick, onMouseEnter, onMouseLeave,\n            setLayer,\n        ],\n    );\n\n    const {\n        paint,\n        filter,\n        layout,\n    } = layerOptions;\n\n    // Handle paint change\n    // TODO: don't call in first render\n    useEffect(\n        () => {\n            if (!map || !sourceKey || !layerKey || !paint) {\n                return;\n            }\n            const id = getLayerName(sourceKey, layerKey);\n            Object.entries(paint).forEach(([key, value]) => {\n                map.setPaintProperty(id, key, value);\n            });\n        },\n        [map, sourceKey, layerKey, paint],\n    );\n\n    // Handle layout change\n    // TODO: dont' call in first render\n    useEffect(\n        () => {\n            if (!map || !sourceKey || !layerKey || !layout) {\n                return;\n            }\n            const id = getLayerName(sourceKey, layerKey);\n            Object.entries(layout).forEach(([key, value]) => {\n                map.setLayoutProperty(id, key, value);\n            });\n        },\n        [map, sourceKey, layerKey, layout],\n    );\n\n    // Handle filter change\n    // TODO: don't call in first render\n    useEffect(\n        () => {\n            if (!map || !sourceKey || !layerKey) {\n                return;\n            }\n            const id = getLayerName(sourceKey, layerKey);\n            map.setFilter(id, filter);\n        },\n        [map, sourceKey, layerKey, filter],\n    );\n\n    useEffect(\n        () => {\n            if (!map || !sourceKey || !layerKey || !onAnimationFrame) {\n                return noop;\n            }\n\n\n            const handleAnimation = (timestamp: number) => {\n                const values = onAnimationFrame(timestamp);\n                if (values) {\n                    const id = getLayerName(sourceKey, layerKey);\n                    Object.entries(values).forEach(([key, value]) => {\n                        map.setPaintProperty(id, key, value);\n                    });\n                }\n\n                animationKeyRef.current = requestAnimationFrame(handleAnimation);\n            };\n\n            animationKeyRef.current = requestAnimationFrame(handleAnimation);\n\n            return () => {\n                if (animationKeyRef.current) {\n                    cancelAnimationFrame(animationKeyRef.current);\n                }\n            };\n        },\n        [map, sourceKey, layerKey, onAnimationFrame],\n    );\n\n    return null;\n};\n\n\nMapLayer.defaultProps = {\n};\n\nexport default MapLayer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-label\":\"styles_input-label_3HrtoOEHwOyrkjjGT5nCiM\",\"inputLabel\":\"styles_input-label_3HrtoOEHwOyrkjjGT5nCiM\",\"left\":\"styles_left_1HXw_Eblw8P5C1uoeNIhpn\",\"right\":\"styles_right_BQ8a4dmn5yrF-mC6fh7mR\",\"empty\":\"styles_empty_36iIMrixS45ew4B8QLvxIz\",\"active\":\"styles_active_2toALumBw4h8PjLrKBnBZM\",\"error\":\"styles_error_S6ZyrPsiNsk8Xez1t2t6Q\",\"disabled\":\"styles_disabled_1roKfzEU5S7rC2zwBLGDhd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"styles_backdrop_1fstYEy7MJ0NRJh0q4dG3O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"styles_map_1XBc-C87avwQhvFpgQALWo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-animation\":\"styles_loading-animation_qxuDItFl_JUlQ-vYhe4Dq\",\"loadingAnimation\":\"styles_loading-animation_qxuDItFl_JUlQ-vYhe4Dq\",\"circle\":\"styles_circle_2c62b3xtpASl5TX7Pyg4YV\",\"blink\":\"styles_blink_29Sv6Ib0e3CkAbeBnxneXW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-container\":\"styles_input-container_3EFXHtzAvPMugohtWASbpg\",\"inputContainer\":\"styles_input-container_3EFXHtzAvPMugohtWASbpg\",\"main\":\"styles_main_3FA57vI4bGz-OgZtyOvUaZ\",\"icons\":\"styles_icons_2Njm6jd624FTyrsGn6n9Ys\",\"input\":\"styles_input_WAvqH0jXJ3xsYHE3pWhaF\",\"actions\":\"styles_actions_3ZAHmxG0L5jfS8n4x6ReAV\"};","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport produce from 'immer';\n// import 'mapbox-gl/dist/mapbox-gl.css';\n\nimport { getLayerName } from './utils';\nimport { Layer, Sources, Source } from './type';\nimport { MapChildContext } from './context';\n\nconst UNSUPPORTED_BROWSER = !mapboxgl.supported();\nconst { REACT_APP_MAPBOX_ACCESS_TOKEN: TOKEN } = process.env;\nif (TOKEN) {\n    mapboxgl.accessToken = TOKEN;\n}\n\ntype Position = 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left';\n\ninterface LastIn {\n    id: string | number | undefined;\n    layerName: string;\n    sourceName: string;\n    sourceLayer: string | undefined;\n}\n\ninterface ExtendedLayer extends Layer {\n    layerKey: string;\n    sourceKey: string;\n}\n\nfunction findLayerFromLayers(layers: ExtendedLayer[], layerKey: string) {\n    const layer = layers.find(l => l.layerKey === layerKey);\n    return layer;\n}\n\nfunction getLayersForSources(sources: Sources) {\n    const layers = Object.entries(sources)\n        .filter(([_, source]) => !!source.layers)\n        .map(([sourceKey, source]) => (\n            Object.entries(source.layers)\n                .map(([layerKey, layer]) => ({\n                    ...layer,\n                    sourceKey,\n                    layerKey: getLayerName(sourceKey, layerKey),\n                }))\n        ))\n        .flat();\n    return layers;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n\ninterface Props {\n    mapStyle: mapboxgl.MapboxOptions['style'];\n    mapOptions: Omit<mapboxgl.MapboxOptions, 'style' | 'container'>;\n\n    scaleControlShown: boolean;\n    scaleControlPosition?: Position;\n    scaleControlOptions?: ConstructorParameters<typeof mapboxgl.ScaleControl>[0];\n\n    navControlShown: boolean;\n    navControlPosition?: Position;\n    navControlOptions?: ConstructorParameters<typeof mapboxgl.NavigationControl>[0];\n\n    debug?: boolean;\n}\n\nconst Map: React.FC<Props> = (props) => {\n    const {\n        mapStyle: mapStyleFromProps,\n        mapOptions,\n\n        scaleControlPosition,\n        scaleControlShown,\n        scaleControlOptions,\n\n        navControlShown,\n        navControlOptions,\n        navControlPosition,\n\n        children,\n\n        debug,\n    } = props;\n\n    const [initialDebug] = useState(debug);\n\n    const [mapStyle, setMapStyle] = useState<mapboxgl.MapboxOptions['style']>(undefined);\n    const [loaded, setLoaded] = useState<boolean>(false);\n\n    const boundsRef = useRef<[number, number, number, number] | undefined>();\n    const paddingRef = useRef<number | undefined>();\n    const durationRef = useRef<number | undefined>();\n\n    const lastIn = useRef<LastIn | undefined>(undefined);\n    const mapDestroyedRef = useRef(false);\n    const sourcesRef = useRef<Sources>({});\n    const mapRef = useRef<mapboxgl.Map | undefined>(undefined);\n    const mapContainerRef = useRef<HTMLDivElement>(null);\n\n    const setBounds = useCallback(\n        (\n            bounds: [number, number, number, number] | undefined,\n            padding: number | undefined,\n            duration: number | undefined,\n        ) => {\n            boundsRef.current = bounds;\n            paddingRef.current = padding;\n            durationRef.current = duration;\n        },\n        [],\n    );\n\n    // Create map\n    useEffect(\n        () => {\n            if (UNSUPPORTED_BROWSER) {\n                console.error('No Mapboxgl support.');\n                return noop;\n            }\n            const { current: mapContainer } = mapContainerRef;\n            if (!mapContainer) {\n                console.error('No container found.');\n                return noop;\n            }\n\n            const mapboxglMap = new mapboxgl.Map({\n                container: mapContainer,\n                style: mapStyleFromProps,\n                preserveDrawingBuffer: true,\n                ...mapOptions,\n            });\n\n            mapRef.current = mapboxglMap;\n            // FIXME: we shouldn't always set cursor to pointer\n            // mapboxglMap.getCanvas().style.cursor = 'pointer';\n\n            if (scaleControlShown) {\n                const scale = new mapboxgl.ScaleControl(scaleControlOptions);\n                mapboxglMap.addControl(scale, scaleControlPosition);\n            }\n\n            if (navControlShown) {\n                // NOTE: don't we need to remove control on unmount?\n                const nav = new mapboxgl.NavigationControl(navControlOptions);\n                mapboxglMap.addControl(\n                    nav,\n                    navControlPosition,\n                );\n            }\n\n            /*\n            // TODO: need to resize map in some cases\n            const timer = setTimeout(() => {\n                mapboxglMap.resize();\n            }, 200);\n            */\n\n            const handleClick = (data: mapboxgl.MapMouseEvent & mapboxgl.EventData) => {\n                const { current: map } = mapRef;\n                if (!map) {\n                    return;\n                }\n\n                const layers = getLayersForSources(sourcesRef.current);\n\n                const {\n                    point,\n                    lngLat,\n                } = data;\n\n                const clickableLayerKeys = layers\n                    .filter(layer => !!layer.onClick)\n                    .map(layer => layer.layerKey);\n\n                const clickableFeatures = map.queryRenderedFeatures(\n                    point,\n                    { layers: clickableLayerKeys },\n                );\n\n                if (clickableFeatures.length <= 0) {\n                    console.warn('No clickable layer found.');\n                    // TODO: add a global handler\n                    return;\n                }\n                clickableFeatures.every((clickableFeature) => {\n                    const { layer: { id } } = clickableFeature;\n\n                    const layer = findLayerFromLayers(layers, id);\n                    if (layer && layer.onClick) {\n                        return !layer.onClick(clickableFeature, lngLat, point, map);\n                    }\n                    return false;\n                });\n            };\n\n            const handleDoubleClick = (data: mapboxgl.MapMouseEvent & mapboxgl.EventData) => {\n                const { current: map } = mapRef;\n                if (!map) {\n                    return;\n                }\n\n                const layers = getLayersForSources(sourcesRef.current);\n\n                const {\n                    point,\n                    lngLat,\n                } = data;\n\n                const clickableLayerKeys = layers\n                    .filter(layer => !!layer.onDoubleClick)\n                    .map(layer => layer.layerKey);\n\n                const clickableFeatures = map.queryRenderedFeatures(\n                    point,\n                    { layers: clickableLayerKeys },\n                );\n\n                if (clickableFeatures.length <= 0) {\n                    console.warn('No clickable layer found.');\n                    // TODO: add a global handler\n                    return;\n                }\n                clickableFeatures.every((clickableFeature) => {\n                    const { layer: { id } } = clickableFeature;\n\n                    const layer = findLayerFromLayers(layers, id);\n                    if (layer && layer.onDoubleClick) {\n                        return !layer.onDoubleClick(clickableFeature, lngLat, point, map);\n                    }\n                    return false;\n                });\n            };\n\n            const handleMouseMove = (data: mapboxgl.MapMouseEvent & mapboxgl.EventData) => {\n                const { current: map } = mapRef;\n                if (!map) {\n                    return;\n                }\n\n                const layers = getLayersForSources(sourcesRef.current);\n\n                const {\n                    point,\n                    lngLat,\n                } = data;\n\n                const interactiveLayerKeys = layers\n                    .filter(layer => !!layer.onClick || !!layer.onDoubleClick)\n                    .map(layer => layer.layerKey);\n                const interactiveFeatures = map.queryRenderedFeatures(\n                    point,\n                    { layers: interactiveLayerKeys },\n                );\n                if (interactiveFeatures.length <= 0) {\n                    mapboxglMap.getCanvas().style.cursor = '';\n                } else {\n                    mapboxglMap.getCanvas().style.cursor = 'pointer';\n                }\n\n                const hoverableLayerKeys = layers\n                    .filter(layer => !!layer.onMouseEnter || !!layer.onMouseLeave)\n                    .map(layer => layer.layerKey);\n\n                const hoverableFeatures = map.queryRenderedFeatures(\n                    point,\n                    { layers: hoverableLayerKeys },\n                );\n\n                if (hoverableFeatures.length <= 0) {\n                    if (lastIn.current) {\n                        mapboxglMap.removeFeatureState(\n                            {\n                                id: lastIn.current.id,\n                                source: lastIn.current.sourceName,\n                                sourceLayer: lastIn.current.sourceLayer,\n                            },\n                            'hovered',\n                        );\n                        const layer = findLayerFromLayers(layers, lastIn.current.layerName);\n                        if (layer && layer.onMouseLeave) {\n                            layer.onMouseLeave(map);\n                        }\n                    }\n                    lastIn.current = undefined;\n                    return;\n                }\n\n                const firstFeature = hoverableFeatures[0];\n                if (\n                    !lastIn.current\n                    || firstFeature.source !== lastIn.current.sourceName\n                    || firstFeature.sourceLayer !== lastIn.current.sourceLayer\n                    || firstFeature.layer.id !== lastIn.current.layerName\n                    || firstFeature.id !== lastIn.current.id\n                ) {\n                    if (lastIn.current) {\n                        mapboxglMap.removeFeatureState(\n                            {\n                                id: lastIn.current.id,\n                                source: lastIn.current.sourceName,\n                                sourceLayer: lastIn.current.sourceLayer,\n                            },\n                            'hovered',\n                        );\n                    }\n                    if (lastIn.current && (\n                        firstFeature.source !== lastIn.current.sourceName\n                        || firstFeature.sourceLayer !== lastIn.current.sourceLayer\n                        || firstFeature.layer.id !== lastIn.current.layerName\n                    )) {\n                        const layer = findLayerFromLayers(layers, lastIn.current.layerName);\n                        if (layer && layer.onMouseLeave) {\n                            layer.onMouseLeave(map);\n                        }\n                    }\n\n                    lastIn.current = {\n                        id: firstFeature.id,\n                        layerName: firstFeature.layer.id,\n                        sourceName: firstFeature.source,\n                        sourceLayer: firstFeature.sourceLayer,\n                    };\n\n                    mapboxglMap.setFeatureState(\n                        {\n                            id: lastIn.current.id,\n                            source: lastIn.current.sourceName,\n                            sourceLayer: lastIn.current.sourceLayer,\n                        },\n                        { hovered: true },\n                    );\n\n                    const { layer: { id } } = firstFeature;\n                    const layer = findLayerFromLayers(layers, id);\n                    if (layer && layer.onMouseEnter) {\n                        layer.onMouseEnter(firstFeature, lngLat, point, map);\n                    }\n                }\n            };\n\n            const handleResize = () => {\n                const { current: map } = mapRef;\n                if (!map) {\n                    return;\n                }\n\n                if (!map) {\n                    return;\n                }\n                if (!boundsRef.current) {\n                    return;\n                }\n                // NOTE: just to be safe here\n                if (boundsRef.current.length < 4) {\n                    return;\n                }\n\n                const [fooLon, fooLat, barLon, barLat] = boundsRef.current;\n                map.fitBounds(\n                    [[fooLon, fooLat], [barLon, barLat]],\n                    {\n                        padding: paddingRef.current,\n                        duration: durationRef.current,\n                    },\n                );\n            };\n\n            mapboxglMap.on('click', handleClick);\n            mapboxglMap.on('dblclick', handleDoubleClick);\n            mapboxglMap.on('mousemove', handleMouseMove);\n            mapboxglMap.on('resize', handleResize);\n\n            const destroy = () => {\n                // clearTimeout(timer);\n\n                mapboxglMap.off('click', handleClick);\n                mapboxglMap.off('dblclick', handleDoubleClick);\n                mapboxglMap.off('mousemove', handleMouseMove);\n                mapboxglMap.off('resize', handleResize);\n\n                sourcesRef.current = {};\n                lastIn.current = undefined;\n                mapDestroyedRef.current = true;\n\n                if (initialDebug) {\n                    console.warn('Removing map');\n                }\n                mapboxglMap.remove();\n            };\n\n            return destroy;\n        },\n        [initialDebug],\n    );\n\n    // Handle style load and map ready\n    useEffect(\n        () => {\n            const { current: map } = mapRef;\n            if (UNSUPPORTED_BROWSER || !map || !mapStyleFromProps) {\n                return noop;\n            }\n            sourcesRef.current = {};\n            lastIn.current = undefined;\n\n            if (initialDebug) {\n                console.warn(`Setting map style ${mapStyleFromProps}`);\n            }\n\n            map.setStyle(mapStyleFromProps);\n            const onStyleData = () => {\n                if (initialDebug) {\n                    console.info('Passing mapStyle:', mapStyleFromProps);\n                }\n                setMapStyle(mapStyleFromProps);\n            };\n            map.once('styledata', onStyleData);\n\n            // FIXME: This will only be called once, should be moved when\n            // map object is created\n            const onLoad = () => {\n                setLoaded(true);\n            };\n            map.once('load', onLoad);\n\n            return () => {\n                if (mapRef.current) {\n                    mapRef.current.off('styledata', onStyleData);\n\n                    mapRef.current.off('load', onLoad);\n                }\n            };\n        },\n        [mapStyleFromProps, initialDebug],\n    );\n\n\n    const isMapDestroyed = useCallback(\n        () => !!mapDestroyedRef.current,\n        [],\n    );\n\n    const isSourceDefined = useCallback(\n        (sourceKey: string) => (\n            !!sourcesRef.current[sourceKey]\n        ),\n        [],\n    );\n\n    const getSource = useCallback(\n        (sourceKey: string) => (\n            sourcesRef.current[sourceKey]\n        ),\n        [],\n    );\n\n    const setSource = useCallback(\n        (source: Source) => {\n            sourcesRef.current = produce(sourcesRef.current, (safeSource) => {\n                const { name } = source;\n                // eslint-disable-next-line no-param-reassign\n                safeSource[name] = source;\n            });\n        },\n        [],\n    );\n\n    const removeSource = useCallback(\n        (sourceKey: string) => {\n            if (!sourcesRef.current[sourceKey]) {\n                return;\n            }\n\n            sourcesRef.current = produce(sourcesRef.current, (safeSource) => {\n                // eslint-disable-next-line no-param-reassign\n                delete safeSource[sourceKey];\n            });\n\n            const { current: map } = mapRef;\n            if (map) {\n                if (initialDebug) {\n                    console.warn(`Removing source: ${sourceKey}`);\n                }\n                map.removeSource(sourceKey);\n            }\n        },\n        [initialDebug],\n    );\n\n    const mapChildren = children as React.ReactElement<unknown>;\n    if (UNSUPPORTED_BROWSER) {\n        return mapChildren;\n    }\n\n    const childrenProps = {\n        map: mapRef.current,\n        mapStyle: loaded ? mapStyle : undefined,\n        mapContainerRef,\n\n        isSourceDefined,\n        getSource,\n        setSource,\n        removeSource,\n\n        isMapDestroyed,\n\n        setBounds,\n        debug: initialDebug,\n    };\n\n    return (\n        <MapChildContext.Provider value={childrenProps}>\n            {mapChildren}\n        </MapChildContext.Provider>\n    );\n};\n\nMap.defaultProps = {\n    scaleControlShown: false,\n    scaleControlPosition: 'bottom-right',\n\n    navControlShown: false,\n    navControlPosition: 'top-right',\n\n    debug: false,\n};\n\nexport default Map;\n","import { useRef, useState, useEffect } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { randomString } from '@togglecorp/fujs';\n\ninterface ResizeHandler {\n    (rect: ClientRect): void;\n}\n\ninterface ResizeHandlers {\n    [key: string]: ResizeHandler;\n}\n\nconst resizeHandlers: ResizeHandlers = {};\n\nconst handleResize: ResizeObserverCallback = (entries) => {\n    entries.forEach((entry) => {\n        const element = entry.target;\n        const key = element.dataset.resizeHandlerKey;\n        if (key && resizeHandlers[key]) {\n            const { contentRect: rect } = entry;\n            resizeHandlers[key](rect);\n        }\n    });\n};\n\nconst observer = new ResizeObserver(handleResize);\n\nconst addResizeHandler = (ref: React.RefObject<HTMLDivElement>, callback: ResizeHandler) => {\n    const key = randomString(16);\n    if (!ref.current) {\n        return;\n    }\n    // eslint-disable-next-line no-param-reassign\n    ref.current.dataset.resizeHandlerKey = key;\n    resizeHandlers[key] = callback;\n    observer.observe(ref.current);\n};\n\nconst removeResizeHandler = (ref: React.RefObject<HTMLDivElement>) => {\n    if (!ref.current) {\n        return;\n    }\n\n    observer.unobserve(ref.current);\n    const key = ref.current.dataset.resizeHandlerKey;\n    if (!key || !resizeHandlers[key]) {\n        return;\n    }\n    delete resizeHandlers[key];\n};\n\nconst useDimension = (\n    targetRef: React.RefObject<HTMLDivElement> | undefined,\n    debounceDuration = 200,\n) => {\n    const timeoutRef = useRef<number | undefined>();\n    const [rect, setRect] = useState<ClientRect | undefined>(undefined);\n\n    useEffect(\n        () => {\n            if (!targetRef) {\n                return () => {\n                    // noop\n                };\n            }\n\n            addResizeHandler(\n                targetRef,\n                (r: ClientRect) => {\n                    window.clearTimeout(timeoutRef.current);\n\n                    timeoutRef.current = window.setTimeout(\n                        () => {\n                            const different = (\n                                !rect\n                                // || r.x !== rect.x\n                                // || r.y !== rect.y\n                                || r.width !== rect.width\n                                || r.height !== rect.height\n                                || r.top !== rect.top\n                                || r.right !== rect.right\n                                || r.bottom !== rect.bottom\n                                || r.left !== rect.left\n                            );\n                            if (different) {\n                                setRect(r);\n                            }\n                        },\n                        debounceDuration,\n                    );\n                },\n            );\n            return () => {\n                window.clearTimeout(timeoutRef.current);\n                removeResizeHandler(targetRef);\n            };\n        },\n    );\n    return rect;\n};\n\nexport default useDimension;\n","import React, { useContext, useEffect } from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport { MapChildContext } from '../context';\nimport useDimension from '../useDimension';\n\nimport styles from './styles.css';\n// import styles from './styles.scss';\n\ninterface Props {\n    className?: string;\n}\n\n// TODO: make container responsive\nconst MapContainer = (props: Props) => {\n    const { className } = props;\n    const { mapContainerRef, map } = useContext(MapChildContext);\n    const rect = useDimension(mapContainerRef);\n\n    useEffect(\n        () => {\n            if (map) {\n                map.resize();\n            }\n        },\n        [rect, map],\n    );\n\n    return (\n        <div\n            ref={mapContainerRef}\n            className={_cs(className, styles.map)}\n        />\n    );\n};\n\nexport default MapContainer;\n","import { useContext, useEffect, useState } from 'react';\nimport { difference } from '@togglecorp/fujs';\n\nimport { SourceChildContext } from '../context';\nimport { usePrevious } from '../utils';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\ninterface Props<T> {\n    sourceLayer?: string;\n    attributeKey: string;\n    attributes: { id: number; value: T }[];\n}\n\nfunction MapState<T>(props: Props<T>) {\n    const {\n        sourceLayer,\n        attributeKey,\n        attributes,\n    } = props;\n\n    const {\n        map,\n        mapStyle,\n\n        sourceKey,\n        isSourceDefined,\n        isMapDestroyed,\n        debug,\n    } = useContext(SourceChildContext);\n\n    const [initialAttributes] = useState(attributes);\n    const [initialDebug] = useState(debug);\n\n    const prevAttributes = usePrevious(attributes, []);\n\n    // Handle attributes change\n    useEffect(\n        () => {\n            if (!map || !sourceKey) {\n                return noop;\n            }\n\n            if (initialDebug) {\n                // eslint-disable-next-line max-len\n                console.warn(`Setting source state: \"${sourceKey}\" with \"${sourceLayer || 'no'}\" source layer.`);\n            }\n\n            initialAttributes.forEach((attribute) => {\n                map.setFeatureState(\n                    {\n                        id: attribute.id,\n                        source: sourceKey,\n                        sourceLayer,\n                    },\n                    { [attributeKey]: attribute.value },\n                );\n            });\n\n            return () => {\n                if (!isMapDestroyed() && isSourceDefined(sourceKey)) {\n                    if (initialDebug) {\n                        console.warn(`Removing source state: \"${sourceKey}\" with \"${sourceLayer || 'no'}\" source layer.`);\n                    }\n                    initialAttributes.forEach((attribute) => {\n                        map.removeFeatureState(\n                            {\n                                id: attribute.id,\n                                source: sourceKey,\n                                sourceLayer,\n                            },\n                            attributeKey,\n                        );\n                    });\n                }\n            };\n        },\n        [\n            map, mapStyle,\n            sourceKey, sourceLayer,\n            attributeKey, initialAttributes,\n            isSourceDefined, isMapDestroyed,\n            initialDebug,\n        ],\n    );\n\n    useEffect(\n        () => {\n            if (!map || !sourceKey) {\n                return;\n            }\n            const toBeDeleted = difference(new Set(prevAttributes), new Set(attributes));\n            const toBeAddedModified = difference(new Set(attributes), toBeDeleted);\n\n            toBeDeleted.forEach((attribute) => {\n                map.removeFeatureState(\n                    {\n                        id: attribute.id,\n                        source: sourceKey,\n                        sourceLayer,\n                    },\n                    attributeKey,\n                );\n            });\n            toBeAddedModified.forEach((attribute) => {\n                map.setFeatureState(\n                    {\n                        id: attribute.id,\n                        source: sourceKey,\n                        sourceLayer,\n                    },\n                    { [attributeKey]: attribute.value },\n                );\n            });\n        },\n        [map, sourceKey, attributes, prevAttributes, attributeKey, sourceLayer],\n    );\n\n    return null;\n}\n\n\nMapState.defaultProps = {\n    attributes: [],\n};\n\nexport default MapState;\n","const darkGray = '#6b6b6b';\nconst whiteHalo = 'rgba(255, 255, 255, 1)';\n\nconst provinceLabelPaint: mapboxgl.SymbolPaint = {\n    'text-color': darkGray,\n    'text-halo-color': whiteHalo,\n    'text-halo-width': 1,\n    'text-halo-blur': 0,\n};\nconst districtLabelPaint: mapboxgl.SymbolPaint = {\n    'text-color': darkGray,\n    'text-halo-color': whiteHalo,\n    'text-halo-width': 2,\n};\nconst municipalityLabelPaint: mapboxgl.SymbolPaint = {\n    'text-color': darkGray,\n    'text-halo-color': whiteHalo,\n    'text-halo-width': 2,\n};\n\nconst provinceLabelLayout: mapboxgl.SymbolLayout = {\n    visibility: 'visible',\n    'text-allow-overlap': false,\n    'text-font': ['Source Sans Pro SemiBold', 'Arial Unicode MS Regular'],\n    'text-field': ['get', 'name'],\n    'text-size': 14,\n    'text-justify': 'center',\n    'text-anchor': 'center',\n    'text-padding': 0,\n};\n\nconst districtLabelLayout: mapboxgl.SymbolLayout = {\n    visibility: 'visible',\n    'text-allow-overlap': false,\n    'text-font': ['Source Sans Pro SemiBold', 'Arial Unicode MS Regular'],\n    'text-field': ['get', 'name'],\n    'text-size': 13,\n    'text-justify': 'center',\n    'text-anchor': 'center',\n    'text-padding': 0,\n};\n\nconst municipalityLabelLayout: mapboxgl.SymbolLayout = {\n    visibility: 'visible',\n    'text-allow-overlap': false,\n    'text-font': ['Source Sans Pro SemiBold', 'Arial Unicode MS Regular'],\n    'text-field': ['get', 'name'],\n    'text-size': 12,\n    'text-justify': 'center',\n    'text-anchor': 'center',\n    'text-padding': 0,\n};\n\nconst provinceOutlinePaint: mapboxgl.LinePaint = {\n    'line-color': '#000000',\n    'line-width': 1,\n    'line-opacity': [\n        'case',\n        ['==', ['feature-state', 'hovered'], true],\n        1,\n        0.3,\n    ],\n};\n\nconst districtOutlinePaint: mapboxgl.LinePaint = {\n    'line-color': '#000000',\n    'line-width': 1,\n    'line-opacity': [\n        'case',\n        ['==', ['feature-state', 'hovered'], true],\n        0.8,\n        0.2,\n    ],\n};\n\nconst municipalityOutlinePaint: mapboxgl.LinePaint = {\n    'line-color': '#000000',\n    'line-width': 1,\n    'line-opacity': [\n        'case',\n        ['==', ['feature-state', 'hovered'], true],\n        0.8,\n        0.1,\n    ],\n};\n\nconst backgroundRasterPaint: mapboxgl.RasterPaint = {\n    'raster-opacity': 0.8,\n};\n\nconst theme = {\n    province: {\n        outlinePaint: provinceOutlinePaint,\n        labelPaint: provinceLabelPaint,\n        labelLayout: provinceLabelLayout,\n    },\n    district: {\n        outlinePaint: districtOutlinePaint,\n        labelPaint: districtLabelPaint,\n        labelLayout: districtLabelLayout,\n    },\n    municipality: {\n        outlinePaint: municipalityOutlinePaint,\n        labelPaint: municipalityLabelPaint,\n        labelLayout: municipalityLabelLayout,\n    },\n    background: {\n        rasterPaint: backgroundRasterPaint,\n    },\n};\n\nexport const noneLayout: mapboxgl.Layout = {\n    visibility: 'none',\n};\n\nexport const visibleLayout: mapboxgl.Layout = {\n    visibility: 'visible',\n};\n\nexport default theme;\n","import React, { useMemo } from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Map from '#remap';\nimport MapContainer from '#remap/MapContainer';\nimport MapSource from '#remap/MapSource';\nimport MapTooltip from '#remap/MapTooltip';\nimport MapLayer from '#remap/MapSource/MapLayer';\nimport MapState from '#remap/MapSource/MapState';\nimport { getLayerName } from '#remap/utils';\n\nimport {\n    getRasterTile,\n} from '#utils/common';\n\nimport { Layer } from '#types';\n\nimport theme, { noneLayout, visibleLayout } from './mapTheme';\n\nimport styles from './styles.css';\n\n\nconst defaultCenter: mapboxgl.LngLatLike = [\n    84.1240, 28.3949,\n];\n\nconst defaultBounds: [number, number, number, number] = [\n    80.05858661752784, 26.347836996368667,\n    88.20166918432409, 30.44702867091792,\n];\n\nconst mapOptions: Omit<mapboxgl.MapboxOptions, 'style' | 'container'> = {\n    logoPosition: 'bottom-right',\n    minZoom: 5,\n    zoom: 3,\n    center: defaultCenter,\n    bounds: defaultBounds,\n};\n\nconst tooltipOptions: mapboxgl.PopupOptions = {\n    closeOnClick: false,\n    closeButton: false,\n    offset: 8,\n    maxWidth: '480px',\n};\n\ninterface HoveredRegion {\n    feature: mapboxgl.MapboxGeoJSONFeature;\n    lngLat: mapboxgl.LngLatLike;\n}\n\nconst Tooltip = ({\n    feature,\n}: { feature: mapboxgl.MapboxGeoJSONFeature }) => {\n    if (!feature) {\n        return null;\n    }\n\n    return (\n        <div className={styles.tooltip}>\n            {feature.properties && (\n                <div className={styles.regionTitle}>\n                    { feature.properties.name }\n                </div>\n            )}\n            {feature.state && (\n                <div className={styles.value}>\n                    { feature.state.value }\n                </div>\n            )}\n        </div>\n    );\n};\n\ninterface Props {\n    className?: string;\n    regionLevel: 'municipality' | 'district' | 'province';\n    // FIXME: use type from typings\n    choroplethMapState?: { id: number; value: number }[];\n    bubbleMapState?: { id: number; value: number }[];\n    choroplethMapPaint?: mapboxgl.FillPaint;\n    bubbleMapPaint?: mapboxgl.CirclePaint;\n    children?: React.ReactNode;\n    hideChoropleth?: boolean;\n    hideBubble?: boolean;\n    rasterLayer?: Layer;\n    printMode?: boolean;\n    hideTooltipOnHover?: boolean;\n    onClick?: (\n        feature: mapboxgl.MapboxGeoJSONFeature,\n        lngLat: mapboxgl.LngLat,\n        point: mapboxgl.Point,\n    ) => boolean | undefined;\n}\n\nfunction IndicatorMap(props: Props) {\n    const {\n        className,\n        regionLevel,\n        choroplethMapState,\n        bubbleMapState,\n        choroplethMapPaint,\n        bubbleMapPaint,\n        children,\n        hideChoropleth,\n        hideBubble,\n        rasterLayer,\n        printMode,\n        hideTooltipOnHover,\n        onClick,\n    } = props;\n\n    const [\n        hoveredRegionProperties,\n        setHoveredRegionProperties,\n    ] = React.useState<HoveredRegion | undefined>();\n\n    const handleMapRegionMouseEnter = React.useCallback(\n        (feature: mapboxgl.MapboxGeoJSONFeature, lngLat: mapboxgl.LngLat) => {\n            setHoveredRegionProperties({\n                feature,\n                lngLat,\n            });\n        },\n        [setHoveredRegionProperties],\n    );\n\n    const handleMapRegionMouseLeave = React.useCallback(() => {\n        setHoveredRegionProperties(undefined);\n    }, [setHoveredRegionProperties]);\n\n    const rasterTiles = useMemo(\n        () => {\n            if (!rasterLayer) {\n                return undefined;\n            }\n            return [getRasterTile(\n                rasterLayer.geoserverUrl,\n                rasterLayer.workspace,\n                rasterLayer.layerName,\n            )];\n        },\n        [rasterLayer],\n    );\n\n    const isProvinceVisible = regionLevel === 'province';\n    const isDistrictVisible = regionLevel === 'district';\n    const isMunicipalityVisible = regionLevel === 'municipality';\n\n    let selectedSourceForChoropleth;\n    let selectedSourceForBubble;\n\n    if (regionLevel === 'province') {\n        selectedSourceForChoropleth = 'provincegeo';\n        selectedSourceForBubble = 'provincecentroidgeo';\n    } else if (regionLevel === 'district') {\n        selectedSourceForChoropleth = 'districtgeo';\n        selectedSourceForBubble = 'districtcentroidgeo';\n    } else if (regionLevel === 'municipality') {\n        selectedSourceForChoropleth = 'palikageo';\n        selectedSourceForBubble = 'palikacentroidgeo';\n    }\n\n    return (\n        <Map\n            mapStyle=\"mapbox://styles/togglecorp/ck9jjmob30vio1it71wja5zhi\"\n            mapOptions={mapOptions}\n            scaleControlShown\n            scaleControlPosition=\"bottom-right\"\n            navControlShown={!printMode}\n            navControlPosition=\"bottom-right\"\n        >\n            <MapContainer className={_cs(styles.mapContainer, className)} />\n            <MapSource\n                sourceKey=\"nepal\"\n                sourceOptions={{\n                    type: 'vector',\n                    url: 'mapbox://togglecorp.2p8uqg5e',\n                }}\n            >\n                <MapLayer\n                    layerKey=\"palika-fill\"\n                    layerOptions={{\n                        type: 'fill',\n                        'source-layer': 'palikageo',\n                        paint: choroplethMapPaint,\n                        layout: (isMunicipalityVisible && !hideChoropleth)\n                            ? visibleLayout : noneLayout,\n                    }}\n                    onMouseEnter={handleMapRegionMouseEnter}\n                    onMouseLeave={handleMapRegionMouseLeave}\n                    onClick={onClick}\n                />\n                <MapLayer\n                    layerKey=\"palika-line\"\n                    layerOptions={{\n                        type: 'line',\n                        'source-layer': 'palikageo',\n                        paint: theme.municipality.outlinePaint,\n                        layout: isMunicipalityVisible ? visibleLayout : noneLayout,\n                    }}\n                />\n                <MapLayer\n                    layerKey=\"district-fill\"\n                    layerOptions={{\n                        type: 'fill',\n                        'source-layer': 'districtgeo',\n                        paint: choroplethMapPaint,\n                        layout: (isDistrictVisible && !hideChoropleth) ? visibleLayout : noneLayout,\n                    }}\n                    onMouseEnter={handleMapRegionMouseEnter}\n                    onMouseLeave={handleMapRegionMouseLeave}\n                    onClick={onClick}\n                />\n                <MapLayer\n                    layerKey=\"district-line\"\n                    layerOptions={{\n                        type: 'line',\n                        'source-layer': 'districtgeo',\n                        paint: theme.district.outlinePaint,\n                        layout: isDistrictVisible ? visibleLayout : noneLayout,\n                    }}\n                />\n                <MapLayer\n                    layerKey=\"province-fill\"\n                    layerOptions={{\n                        type: 'fill',\n                        'source-layer': 'provincegeo',\n                        paint: choroplethMapPaint,\n                        layout: (isProvinceVisible && !hideChoropleth) ? visibleLayout : noneLayout,\n                    }}\n                    onMouseEnter={handleMapRegionMouseEnter}\n                    onMouseLeave={handleMapRegionMouseLeave}\n                    onClick={onClick}\n                />\n                <MapLayer\n                    layerKey=\"province-line\"\n                    layerOptions={{\n                        type: 'line',\n                        'source-layer': 'provincegeo',\n                        paint: theme.province.outlinePaint,\n                        layout: isProvinceVisible ? visibleLayout : noneLayout,\n                    }}\n                />\n                <MapState\n                    key={selectedSourceForChoropleth}\n                    attributes={choroplethMapState}\n                    attributeKey=\"value\"\n                    sourceLayer={selectedSourceForChoropleth}\n                />\n                {!hideTooltipOnHover\n                    && hoveredRegionProperties\n                    && hoveredRegionProperties.lngLat && (\n                    <MapTooltip\n                        coordinates={hoveredRegionProperties.lngLat}\n                        tooltipOptions={tooltipOptions}\n                        trackPointer\n                    >\n                        <Tooltip\n                            feature={hoveredRegionProperties.feature}\n                        />\n                    </MapTooltip>\n                )}\n            </MapSource>\n            <MapSource\n                sourceKey=\"nepal-centroids\"\n                sourceOptions={{\n                    type: 'vector',\n                    url: 'mapbox://togglecorp.4eqzulj8',\n                }}\n            >\n                <MapLayer\n                    layerKey=\"municipality-bubble\"\n                    layerOptions={{\n                        type: 'circle',\n                        'source-layer': 'palikacentroidgeo',\n                        paint: bubbleMapPaint,\n                        layout: (isMunicipalityVisible && !hideBubble) ? visibleLayout : noneLayout,\n                    }}\n                />\n                <MapLayer\n                    layerKey=\"district-bubble\"\n                    layerOptions={{\n                        type: 'circle',\n                        'source-layer': 'districtcentroidgeo',\n                        paint: bubbleMapPaint,\n                        layout: (isDistrictVisible && !hideBubble) ? visibleLayout : noneLayout,\n                    }}\n                />\n                <MapLayer\n                    layerKey=\"province-bubble\"\n                    layerOptions={{\n                        type: 'circle',\n                        'source-layer': 'provincecentroidgeo',\n                        paint: bubbleMapPaint,\n                        layout: (isProvinceVisible && !hideBubble) ? visibleLayout : noneLayout,\n                    }}\n                />\n                {/*\n                <MapLayer\n                    layerKey=\"palika-label\"\n                    layerOptions={{\n                        type: 'symbol',\n                        'source-layer': 'palikacentroidgeo',\n                        paint: theme.municipality.labelPaint,\n                        layout: isMunicipalityVisible ? theme.municipality.labelLayout : noneLayout,\n                    }}\n                />\n                <MapLayer\n                    layerKey=\"district-label\"\n                    layerOptions={{\n                        type: 'symbol',\n                        'source-layer': 'districtcentroidgeo',\n                        paint: theme.district.labelPaint,\n                        layout: isDistrictVisible ? theme.district.labelLayout : noneLayout,\n                    }}\n                />\n                <MapLayer\n                    layerKey=\"province-label\"\n                    layerOptions={{\n                        type: 'symbol',\n                        'source-layer': 'provincecentroidgeo',\n                        paint: theme.province.labelPaint,\n                        layout: isProvinceVisible ? theme.province.labelLayout : noneLayout,\n                    }}\n                />\n                */}\n                {rasterLayer && (\n                    <MapSource\n                        key={rasterLayer.layerName}\n                        sourceKey={rasterLayer.layerName}\n                        sourceOptions={{\n                            type: 'raster',\n                            tiles: rasterTiles,\n                            tileSize: 256,\n                        }}\n                    >\n                        <MapLayer\n                            layerKey=\"raster-layer\"\n                            beneath={getLayerName('nepal', 'palika-fill')}\n                            layerOptions={{\n                                type: 'raster',\n                                paint: theme.background.rasterPaint,\n                            }}\n                        />\n                    </MapSource>\n                )}\n                <MapState\n                    key={selectedSourceForBubble}\n                    attributes={bubbleMapState}\n                    attributeKey=\"value\"\n                    sourceLayer={selectedSourceForBubble}\n                />\n            </MapSource>\n            { children }\n        </Map>\n    );\n}\n\nexport default IndicatorMap;\n","import {\n    isDefined,\n    isObject,\n    isList,\n    listToMap,\n} from '@togglecorp/fujs';\n\nimport { getPrecision } from '#components/Numeral';\n\nconst forEach = (obj: object, func: (key: string, val: unknown) => void) => {\n    Object.keys(obj).forEach((key) => {\n        const val = (obj as any)[key];\n        func(key, val);\n    });\n};\n\nexport const sanitizeResponse = (data: unknown): any => {\n    if (data === null || data === undefined) {\n        return undefined;\n    }\n    if (isList(data)) {\n        return data.map(sanitizeResponse).filter(isDefined);\n    }\n    if (isObject(data)) {\n        let newData = {};\n        forEach(data, (k, val) => {\n            const newEntry = sanitizeResponse(val);\n            if (newEntry) {\n                newData = {\n                    ...newData,\n                    [k]: newEntry,\n                };\n            }\n        });\n        return newData;\n    }\n    return data;\n};\n\nexport const getFloatPlacement = (parentRef: React.RefObject<HTMLElement>) => {\n    const placement = {\n        top: 'unset',\n        right: 'unset',\n        bottom: 'unset',\n        left: 'unset',\n    };\n\n    if (parentRef.current) {\n        const parentBCR = parentRef.current.getBoundingClientRect();\n        const { x, y, width, height } = parentBCR;\n\n        const cX = window.innerWidth / 2;\n        const cY = window.innerHeight / 2;\n\n        const horizontalPosition = (cX - parentBCR.x) > 0 ? 'right' : 'left';\n        const verticalPosition = (cY - parentBCR.y) > 0 ? 'bottom' : 'top';\n\n\n        if (horizontalPosition === 'left') {\n            placement.right = `${window.innerWidth - x - width}px`;\n        } else if (horizontalPosition === 'right') {\n            placement.left = `${x}px`;\n        }\n\n        if (verticalPosition === 'top') {\n            placement.bottom = `${window.innerHeight - y}px`;\n        } else if (verticalPosition === 'bottom') {\n            placement.top = `${y + height}px`;\n        }\n    }\n\n    return placement;\n};\n\nfunction getSegments(\n    totalSegments: number,\n    minValue: number,\n    maxValue: number,\n    integer = false,\n    includeMinimum = false,\n) {\n    const colorMap: { value: number; relativeLocation: number }[] = [];\n\n    const range = maxValue - minValue;\n\n    let gap = range / totalSegments;\n\n    if (integer) {\n        // gap should be at least one and integer\n        gap = Math.max(Math.ceil(gap), 1);\n    }\n\n    const skipValue = includeMinimum ? 0 : 1;\n\n    const realLength = Math.ceil(range / gap);\n    // NOTE: we are excluding the minimum value\n    for (let i = skipValue; i <= realLength; i += 1) {\n        const value = minValue + (i * gap);\n\n        const precision = getPrecision(value);\n        const sanitizedValue = +(value.toFixed(precision));\n\n        if (colorMap.length > 0 && colorMap[colorMap.length - 1].value === sanitizedValue) {\n            // NOTE: avoid duplicate values\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        colorMap.push({\n            relativeLocation: (i - skipValue) / (realLength - skipValue),\n            value: sanitizedValue,\n        });\n    }\n\n    return colorMap;\n}\n\nexport const generateChoroplethMapPaintAndLegend = (\n    colorDomain: string[],\n    minVal: number,\n    maxValue: number,\n    integer = false,\n): {\n    min: number;\n    paint: mapboxgl.FillPaint;\n    legend: { [key: string]: number };\n} => {\n    // NOTE: handle diverging series\n    // NOTE: handle overflow/underflow\n    const fillOpacityForNoData = 0.4;\n    const fillColorForNoData = '#78909c';\n\n    let minValue = minVal;\n    if (minVal === maxValue) {\n        minValue = 0;\n    } else if (maxValue - minVal <= 1 && integer) {\n        minValue = minVal - 1;\n    }\n\n    let colorMap: {\n        color: string;\n        value: number;\n    }[] = [];\n\n    if (minValue !== Infinity && maxValue !== -Infinity && minValue !== maxValue) {\n        const totalSegments = colorDomain.length;\n        const segments = getSegments(\n            totalSegments,\n            minValue,\n            maxValue,\n            integer,\n        );\n\n        colorMap = segments.map(segment => ({\n            value: segment.value,\n            // NOTE: add a check here\n            color: colorDomain[Math.round((totalSegments - 1) * segment.relativeLocation)],\n        }));\n    }\n\n    // Need at least start and end\n    if (colorMap.length < 2) {\n        return {\n            min: minValue,\n            paint: {\n                'fill-color': fillColorForNoData,\n                'fill-opacity': fillOpacityForNoData,\n            },\n            legend: {},\n        };\n    }\n\n    const colors = colorMap\n        .map(item => [item.value, item.color])\n        .flat()\n        .slice(1); // remove first element\n\n    const fillColor: mapboxgl.FillPaint['fill-color'] = [\n        'case',\n        ['==', ['feature-state', 'value'], null],\n        fillColorForNoData,\n        [\n            'step',\n            ['feature-state', 'value'],\n            ...colors,\n        ],\n    ];\n\n    const fillOpacity: mapboxgl.FillPaint['fill-opacity'] = [\n        'case',\n        ['==', ['feature-state', 'value'], null],\n        fillOpacityForNoData,\n        0.7,\n    ];\n\n    const paint: mapboxgl.FillPaint = {\n        'fill-color': fillColor,\n        'fill-opacity': fillOpacity,\n    };\n\n    return {\n        min: minValue,\n        paint,\n        legend: listToMap(\n            colorMap,\n            item => item.color,\n            item => item.value,\n        ),\n    };\n};\n\nexport const generateBubbleMapPaintAndLegend = (\n    minVal: number,\n    maxValue: number,\n    maxRadius: number,\n    integer = false,\n    positiveColor = '#01665e',\n    negativeColor = '#de2d26',\n): {\n    mapPaint: mapboxgl.CirclePaint;\n    legend: { value: number; radius: number }[];\n} => {\n    const minValue = minVal === maxValue\n        ? 0\n        : minVal;\n\n    if (minValue !== Infinity && maxValue !== -Infinity && minValue !== maxValue) {\n        const array = [\n            0, 0, // NOTE: previously it was minValue, 0,\n            maxValue, maxRadius,\n        ];\n\n        const mapPaint: mapboxgl.CirclePaint = ({\n            'circle-radius': [\n                'interpolate', ['linear'],\n                ['abs', ['number', ['feature-state', 'value'], 0]],\n                ...array,\n            ],\n            'circle-color': [\n                'case',\n                ['>', ['number', ['feature-state', 'value'], 0], 0],\n                positiveColor,\n                negativeColor,\n            ],\n            'circle-opacity': 0.6,\n            'circle-stroke-color': '#fff',\n            'circle-stroke-width': 1,\n            'circle-stroke-opacity': 0.2,\n        });\n\n        const segments = getSegments(\n            5,\n            minValue,\n            maxValue,\n            integer,\n            // minValue !== 0,\n        );\n\n        const legend = segments.map(item => ({\n            value: item.value,\n            radius: maxRadius * (item.value / maxValue),\n        }));\n\n        return {\n            mapPaint,\n            legend,\n        };\n    }\n\n    return {\n        mapPaint: {\n            'circle-radius': 0,\n        },\n        legend: [],\n    };\n};\n\nexport function getRasterTile(baseUrl: string, workspace: string, layer: string) {\n    const rasterTile = [\n        baseUrl, // 'http://34.71.203.97:8080/geoserver/Naxa/wms'\n        '?',\n        '&service=WMS',\n        '&version=1.1.1',\n        '&request=GetMap',\n        '&format=image/png',\n        '&transparent=true',\n        '&tiled=true',\n        `&layers=${workspace}:${layer}`,\n        '&exceptions=application/vnd.ogc.se_inimage',\n        '&width=256',\n        '&height=256',\n        '&srs=EPSG:3857',\n        '&bbox={bbox-epsg-3857}',\n    ].join('');\n    return rasterTile;\n}\n\nexport function getRasterLegendUrl(baseUrl: string, workspace: string, layer: string) {\n    const legendUrl = [\n        baseUrl, // 'http://34.71.203.97:8080/geoserver/Naxa/wms'\n        '?',\n        '&version=1.0.0',\n        '&service=WMS',\n        '&request=GetLegendGraphic',\n        `&layer=${workspace}:${layer}`,\n        '&format=image/png',\n        '&width=20',\n        '&height=20',\n    ].join('');\n\n    return legendUrl;\n}\n\nexport const imageUrlToDataUrl = (\n    url: string,\n    callback: (result: string | null) => void,\n) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            if (typeof reader.result === 'string' || !reader.result) {\n                callback(reader.result);\n            }\n        };\n\n        reader.readAsDataURL(xhr.response);\n    };\n\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n};\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.css';\n\nexport interface Props extends Omit<React.HTMLProps<HTMLButtonElement>, 'onClick'>{\n    className?: string;\n    onClick: (name: string | undefined, e: React.MouseEvent<HTMLButtonElement>) => void;\n    elementRef?: React.RefObject<HTMLButtonElement>;\n    type?: 'button' | 'submit' | 'reset';\n}\n\nfunction RawButton(props: Props) {\n    const {\n        className,\n        onClick,\n        elementRef,\n        ...otherProps\n    } = props;\n\n    const handleClick = React.useCallback(\n        (e: React.MouseEvent<HTMLButtonElement>) => {\n            const {\n                currentTarget: {\n                    name,\n                },\n            } = e;\n\n            onClick(\n                name,\n                e,\n            );\n        },\n        [onClick],\n    );\n\n    return (\n        <button\n            ref={elementRef}\n            type=\"button\"\n            className={_cs(className, styles.rawButton)}\n            onClick={onClick ? handleClick : undefined}\n            {...otherProps}\n        />\n    );\n}\n\nexport default RawButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button_3Yr7OU7lYwtJ4XkafMUJxf\",\"icons\":\"styles_icons_CFFGxAVe4YxTnHo9eYZJG\",\"transparent\":\"styles_transparent_7UHcACxrMd4zA18OzvEHc\",\"default\":\"styles_default_16-3B-Ln3hCKuz3EmF6qox\",\"accent\":\"styles_accent_1ELB6Sl5hlJ7WVGF83RY9D\",\"danger\":\"styles_danger_2adnJ12KoJYCOJ3mNrVopb\",\"primary\":\"styles_primary_15nU3dYr1FIs4ZpRT9vG2E\",\"success\":\"styles_success_21LEYP7rdPXSjr3PrnTKdB\",\"warning\":\"styles_warning_2zGXxAoZ5hUJ3-K6TszhOc\",\"loading-backdrop\":\"styles_loading-backdrop_1To6HPzM2Tvj5r5RWlrD5R\",\"loadingBackdrop\":\"styles_loading-backdrop_1To6HPzM2Tvj5r5RWlrD5R\"};","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\n\nimport { MapChildContext } from './context';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\n// TODO: add mapStyle if necessary\ninterface Props {\n    children: React.ReactElement;\n    coordinates: mapboxgl.LngLatLike;\n    hidden: boolean;\n    onHide?: () => void;\n    tooltipOptions?: mapboxgl.PopupOptions;\n    trackPointer: boolean;\n}\n\nconst MapTooltip = (props: Props) => {\n    const { map } = useContext(MapChildContext);\n    const {\n        children,\n        coordinates,\n        hidden,\n        tooltipOptions,\n        onHide,\n        trackPointer,\n    } = props;\n\n    const tooltipContainerRef = useRef<HTMLDivElement | null>(null);\n    const popupRef = useRef<mapboxgl.Popup | null>(null);\n\n    const [initialTooltipOptions] = useState(tooltipOptions);\n    const [initialTrackPointer] = useState(trackPointer);\n    const [initialCoordinates] = useState(coordinates);\n\n    // Create tooltip <div>\n    useEffect(\n        () => {\n            tooltipContainerRef.current = document.createElement('div');\n            return () => {\n                if (tooltipContainerRef.current) {\n                    tooltipContainerRef.current.remove();\n                }\n            };\n        },\n        [],\n    );\n\n    // Render react component in tooltip <div>\n    useEffect(\n        () => {\n            if (!map) {\n                return;\n            }\n            ReactDOM.render(\n                children,\n                tooltipContainerRef.current,\n            );\n        },\n        [map, children],\n    );\n\n    // Create mapbox popup and assign to tooltip <div>\n    useEffect(\n        () => {\n            if (!map || !tooltipContainerRef.current || hidden) {\n                return noop;\n            }\n\n            popupRef.current = new mapboxgl.Popup(initialTooltipOptions)\n                .setDOMContent(tooltipContainerRef.current)\n                .addTo(map);\n\n            if (initialCoordinates) {\n                popupRef.current.setLngLat(initialCoordinates);\n            }\n            if (initialTrackPointer) {\n                popupRef.current.trackPointer();\n            }\n\n            return () => {\n                if (popupRef.current) {\n                    popupRef.current.remove();\n                    popupRef.current = null;\n                }\n            };\n        },\n        [map, hidden, initialTooltipOptions, initialTrackPointer, initialCoordinates],\n    );\n\n    // Handle coordinates change\n    useEffect(\n        () => {\n            if (!map || !popupRef.current || !coordinates || initialTrackPointer) {\n                return;\n            }\n            popupRef.current.setLngLat(coordinates);\n        },\n        [map, coordinates, initialTrackPointer],\n    );\n\n    // Handle onHide change\n    useEffect(\n        () => {\n            if (!map || !popupRef.current) {\n                return noop;\n            }\n            popupRef.current.on('close', () => {\n                if (onHide) {\n                    onHide();\n                }\n            });\n            return () => {\n                if (popupRef.current) {\n                    popupRef.current.off('close');\n                }\n            };\n        },\n        [map, onHide],\n    );\n\n    return null;\n};\n\n\nMapTooltip.defaultProps = {\n    hidden: false,\n    trackPointer: false,\n};\n\nexport default MapTooltip;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"styles_tooltip_3RpZoEJtSbe19l5FNB2MSz\",\"map-container\":\"styles_map-container_2nm8xnOaAdDD0QpZJu6uW\",\"mapContainer\":\"styles_map-container_2nm8xnOaAdDD0QpZJu6uW\"};","import React, { useMemo } from 'react';\n\nimport useRequest from '#hooks/useRequest';\nimport { apiEndPoint } from '#utils/constants';\nimport {\n    MultiResponse,\n    NavbarContextProps,\n    RegionLevelOption,\n} from '#types';\n\nimport SelectInput from '#components/SelectInput';\nimport SegmentInput from '#components/SegmentInput';\nimport NavbarContext from '#components/NavbarContext';\n\nimport styles from './styles.css';\n\ninterface Province {\n    id: number;\n    name: string;\n    code: string;\n    boundary: string;\n}\ninterface District {\n    id: number;\n    provinceId: number;\n    provinceName: string;\n    name: string;\n    code: string;\n    nCode: number;\n}\n\ninterface Municipality {\n    id: number;\n    name: string;\n    provinceId: number;\n    districtId: number;\n    hlcitCode: string;\n    gnTypeNp: string;\n    code: string;\n    population: number;\n}\n\ntype Region = Province | District | Municipality;\nconst regionKeySelector = (region: Region) => region.id;\nconst regionLabelSelector = (region: Region) => region.name;\n\n\ninterface RegionLevelOptionListItem {\n    key: RegionLevelOption;\n    label: string;\n}\nconst regionLevelOptionListKeySelector = (d: RegionLevelOptionListItem) => d.key;\nconst regionLevelOptionListLabelSelector = (d: RegionLevelOptionListItem) => d.label;\n\nconst regionLevelOptionList: RegionLevelOptionListItem[] = [\n    { key: 'province', label: 'Province' },\n    { key: 'district', label: 'District' },\n    { key: 'municipality', label: 'Municipality' },\n];\n\ninterface Props {\n    className?: string;\n    searchHidden?: boolean;\n}\nfunction RegionSelector(props: Props) {\n    const {\n        className,\n        searchHidden,\n    } = props;\n\n    // FIXME: this must be a multi-select input\n    const [\n        selectedRegion,\n        setSelectedRegion,\n    ] = React.useState<number | undefined>(undefined);\n\n    const {\n        regionLevel,\n        setRegionLevel,\n    } = React.useContext<NavbarContextProps>(NavbarContext);\n\n    const regionLevelLabel = useMemo(\n        () => (\n            regionLevelOptionList.find(v => v.key === regionLevel)?.label\n        ),\n        [regionLevel],\n    );\n\n    const regionGetRequest = searchHidden ? undefined : `${apiEndPoint}/core/${regionLevel}/`;\n    const [\n        regionListPending,\n        regionListResponse,\n    ] = useRequest<MultiResponse<Region>>(regionGetRequest);\n\n    return (\n        <div className={className}>\n            <SegmentInput\n                className={styles.regionLevelSelection}\n                label=\"Admin Level\"\n                options={regionLevelOptionList}\n                optionKeySelector={regionLevelOptionListKeySelector}\n                optionLabelSelector={regionLevelOptionListLabelSelector}\n                value={regionLevel}\n                onChange={setRegionLevel}\n            />\n            {!searchHidden && (\n                <SelectInput\n                    placeholder={`Select ${regionLevelLabel}`}\n                    className={styles.regionSelectInput}\n                    disabled={regionListPending}\n                    options={regionListResponse?.results}\n                    onChange={setSelectedRegion}\n                    value={selectedRegion}\n                    optionLabelSelector={regionLabelSelector}\n                    optionKeySelector={regionKeySelector}\n                />\n            )}\n        </div>\n    );\n}\nexport default RegionSelector;\n","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nimport { Source, Layer } from './type';\n\ninterface MapChildState {\n    map?: mapboxgl.Map;\n    mapStyle?: mapboxgl.MapboxOptions['style'];\n    mapContainerRef?: React.RefObject<HTMLDivElement>;\n    setSource: (source: Source) => void;\n    getSource: (sourceKey: string) => Source | undefined;\n    removeSource: (sourceKey: string) => void;\n    isSourceDefined: (sourceKey: string) => boolean;\n    isMapDestroyed: () => boolean;\n\n    setBounds: (\n        bounds: [number, number, number, number] | undefined,\n        padding: number | undefined,\n        duration: number | undefined,\n    ) => void;\n\n    debug?: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\n\nconst initialMapChildState: MapChildState = {\n    map: undefined,\n    mapContainerRef: undefined,\n    mapStyle: 'mapbox://styles/mapbox/streets-v11',\n\n    setSource: noop,\n    getSource: () => undefined,\n    removeSource: noop,\n    isSourceDefined: () => false,\n    isMapDestroyed: () => false,\n\n    setBounds: noop,\n    debug: false,\n};\n\nexport const MapChildContext = React.createContext(initialMapChildState);\n\n\ninterface SourceChildState {\n    map?: mapboxgl.Map;\n    mapStyle?: mapboxgl.MapboxOptions['style'];\n    sourceKey?: string;\n    isSourceDefined: (sourceKey: string) => boolean;\n    isMapDestroyed: () => boolean;\n\n    setLayer: (layerKey: string, method: (layer: Layer | undefined) => Layer | undefined) => void;\n    getLayer: (layerKey: string) => Layer | undefined;\n    removeLayer: (layerKey: string) => void;\n    debug?: boolean;\n}\n\nconst initialSourceChildState: SourceChildState = {\n    map: undefined,\n    mapStyle: 'mapbox://styles/mapbox/streets-v11',\n    sourceKey: undefined,\n    isSourceDefined: () => false,\n    isMapDestroyed: () => false,\n\n    setLayer: noop,\n    getLayer: () => undefined,\n    removeLayer: noop,\n    debug: false,\n};\n\nexport const SourceChildContext = React.createContext(initialSourceChildState);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"raw-input\":\"styles_raw-input_1tUgz8lbyzhDhvvfIsHTjN\",\"rawInput\":\"styles_raw-input_1tUgz8lbyzhDhvvfIsHTjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"styles_heading_34u7KRRg5xNUxYlbuTISUw\",\"legend-item\":\"styles_legend-item_3cTRcx1NVo2qwpo9oi3woi\",\"legendItem\":\"styles_legend-item_3cTRcx1NVo2qwpo9oi3woi\",\"icon\":\"styles_icon_3fBvrdaTkmpJj2JTzf2-Ds\",\"color\":\"styles_color_2mXZLpvPqOpNbUvUcKBh__\",\"value\":\"styles_value_midnX_PVZaeyrw8NXWY2i\",\"footer\":\"styles_footer_2QDqGOvswClFFFgyHQmf4F\",\"circle\":\"styles_circle_2eb8V07qLaFdMRoB2dKyuU\",\"positive\":\"styles_positive_3EKsKK2JDZBBppMPQseqqJ\",\"negative\":\"styles_negative_2apTClCXrti7DslWgZSQ7F\"};","export const colorDomain: string[] = [\n    '#eff3ff',\n    '#c6dbef',\n    '#9ecae1',\n    '#6baed6',\n    '#3182bd',\n    '#08519c',\n];\n\nexport const apiEndPoint = process.env.REACT_APP_API_SERVER_URL || 'https://dvsnaxa.naxa.com.np/api/v1';\n","import React from 'react';\nimport { _cs, isDefined, formattedNormalize, Lang, addSeparator } from '@togglecorp/fujs';\nimport styles from './styles.css';\n\nexport function getPrecision(value: number | undefined) {\n    if (!value) {\n        return 0;\n    }\n\n    const absolute = Math.abs(value);\n    if (absolute < 1) {\n        return Math.ceil(-Math.log10(absolute)) + 1;\n    }\n\n    if (absolute > 100) {\n        return 0;\n    }\n    return 2;\n}\n\nexport function formatNumber(\n    value: number | undefined,\n    separatorShown = true,\n    normalize?: boolean,\n    precision?: number,\n) {\n    if (!isDefined(value)) {\n        return undefined;\n    }\n\n    const sanitizedValue = Number.parseFloat(String(value));\n    if (Number.isNaN(sanitizedValue)) {\n        return undefined;\n    }\n\n    let output: string | undefined | null = '';\n    let suffix = '';\n\n    if (normalize) {\n        const { number, normalizeSuffix = '' } = formattedNormalize(sanitizedValue, Lang.en);\n        suffix = normalizeSuffix;\n        if (suffix !== '') {\n            output = number.toFixed(2);\n        } else {\n            output = number.toFixed(precision);\n        }\n    } else {\n        output = sanitizedValue.toFixed(precision);\n    }\n\n    if (output.match(/\\.0+$/)) {\n        output = output.substr(0, output.indexOf('.'));\n    }\n\n    if (separatorShown) {\n        output = addSeparator(output, ',');\n    }\n\n    return `${output}${suffix}`;\n}\n\n\ninterface Props {\n    value: number | undefined;\n    precision?: number | undefined;\n    className?: string;\n    normalize?: boolean;\n    separatorShown?: boolean;\n    prefix?: string;\n}\nfunction Numeral({\n    value,\n    precision = getPrecision(value),\n    className: classNameFromProps,\n    normalize,\n    separatorShown = true,\n    prefix = '',\n}: Props) {\n    if (!isDefined(value)) {\n        return null;\n    }\n\n    const className = _cs(classNameFromProps, styles.numeral);\n    const output = formatNumber(\n        value,\n        separatorShown,\n        normalize,\n        precision,\n    );\n\n    return (\n        <div className={className}>\n            {`${prefix}${output}`}\n        </div>\n    );\n}\nexport default Numeral;\n","import { useState, useEffect } from 'react';\nimport AbortController from 'abort-controller';\n\nconst requestOption = {\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json; charset=utf-8',\n    },\n};\n\nfunction useRequest<T>(\n    url?: string,\n    options: object = requestOption,\n): [boolean, T | undefined] {\n    const [response, setResponse] = useState<T>();\n    const [pending, setPending] = useState(!!url);\n    const [lastUrl, setLastUrl] = useState<string | undefined>();\n\n    useEffect(\n        () => {\n            if (!url) {\n                setLastUrl(undefined);\n                return () => {};\n            }\n\n            setPending(true);\n\n            const controller = new AbortController();\n\n            async function fetchResource(myUrl: string, myOptions: object | undefined) {\n                const { signal } = controller;\n\n                let res;\n                try {\n                    res = await fetch(myUrl, { ...myOptions, signal });\n                } catch (e) {\n                    setPending(false);\n                    if (!signal.aborted) {\n                        console.error(`An error occured while fetching ${myUrl}`, e);\n                    }\n                    return;\n                }\n\n                let resBody;\n                try {\n                    const resText = await res.text();\n                    if (resText.length > 0) {\n                        resBody = JSON.parse(resText);\n                    }\n                } catch (e) {\n                    setPending(false);\n                    console.error(`An error occured while parsing data from ${myUrl}`, e);\n                    return;\n                }\n\n                if (res.ok) {\n                    setResponse(resBody);\n                    setLastUrl(url);\n                    setPending(false);\n                }\n            }\n\n            fetchResource(url, options);\n\n            return () => {\n                controller.abort();\n            };\n        },\n        [url, options],\n    );\n\n    return [pending, url === lastUrl ? response : undefined];\n}\nexport default useRequest;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"styles_switch_1zzzVSJwfHh6yjjOFa8t-v\",\"knob\":\"styles_knob_29vnaKMVogzkOwTL3DT3cV\",\"on\":\"styles_on_3cHHVCYECVdQbZJNbYJKEZ\",\"disabled\":\"styles_disabled_2JgVC1QZB4ly7uUWxkCdfK\",\"toggle-button\":\"styles_toggle-button_2pUVOa5Kdcgb7cftydjvxg\",\"toggleButton\":\"styles_toggle-button_2pUVOa5Kdcgb7cftydjvxg\",\"label\":\"styles_label_3shS-b73Dw--xi71HdY8Ju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"styles_option_1MCiM2HIsgAH5N4Ld3khqf\",\"disabled\":\"styles_disabled_1J1ScPESuwVCcKmt9aiYG\",\"active\":\"styles_active_1RNutX3AiNBAr7hWlikbIb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"legend-container\":\"styles_legend-container_2GztKjkVhzwEikcXzzaVTj\",\"legendContainer\":\"styles_legend-container_2GztKjkVhzwEikcXzzaVTj\",\"heading\":\"styles_heading_317dgAlZ-up1dq15ZiYFNl\",\"choropleth-legend\":\"styles_choropleth-legend_3CkUdQCbyfSlySwPT21cmU\",\"choroplethLegend\":\"styles_choropleth-legend_3CkUdQCbyfSlySwPT21cmU\",\"legend-element\":\"styles_legend-element_pAaAuVHIQNsOd229XpEH\",\"legendElement\":\"styles_legend-element_pAaAuVHIQNsOd229XpEH\",\"color\":\"styles_color__F4ebDLJrJWf3yewfpi-H\",\"value\":\"styles_value_OgVMiHrkaoXeouAgiTqpN\"};","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.css';\n\nexport interface Props {\n    className?: string;\n}\n\nfunction LoadingAnimation(props: Props) {\n    const { className } = props;\n\n    return (\n        <div className={_cs(className, styles.loadingAnimation)}>\n            <div className={styles.circle} />\n            <div className={styles.circle} />\n            <div className={styles.circle} />\n        </div>\n    );\n}\n\nexport default LoadingAnimation;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.css';\n\nexport interface Props {\n    className?: string;\n    parentRef?: React.RefObject<HTMLButtonElement>;\n    children?: React.ReactNode;\n}\n\nfunction Backdrop(props: Props) {\n    const {\n        className,\n        parentRef,\n        children,\n    } = props;\n\n    const ref = React.useRef<HTMLDivElement>(null);\n\n    React.useLayoutEffect(\n        () => {\n            const {\n                current: el,\n            } = ref;\n            if (parentRef && parentRef.current && el) {\n                const parentBCR = parentRef.current.getBoundingClientRect();\n                el.style.width = `${parentBCR.width}px`;\n            }\n        },\n        [parentRef],\n    );\n\n    return (\n        <div\n            ref={ref}\n            className={_cs(className, styles.backdrop)}\n        >\n            { children }\n        </div>\n    );\n}\n\nexport default Backdrop;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"print-container\":\"styles_print-container_2jMUWRb04pR8zBoAuDUUzt\",\"printContainer\":\"styles_print-container_2jMUWRb04pR8zBoAuDUUzt\",\"print\":\"styles_print_2YfKBL0L0fSXhUwyX72a41\"};","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.css';\n\ninterface Props {\n    active: boolean;\n    children?: React.ReactNode;\n    className?: string;\n    disabled: boolean;\n    error: boolean;\n    title?: string;\n    rightComponent?: React.ReactNode;\n    rightComponentClassName?: string;\n}\n\nfunction Label(props: Props) {\n    const {\n        active,\n        children,\n        className: classNameFromProps,\n        disabled,\n        error,\n        title,\n        rightComponent,\n        rightComponentClassName,\n        ...otherProps\n    } = props;\n\n    const className = _cs(\n        classNameFromProps,\n        'input-label',\n        styles.inputLabel,\n        !children && 'empty',\n        !children && styles.empty,\n        error && styles.error,\n        error && 'error',\n        active && styles.active,\n        active && 'active',\n        disabled && styles.disabled,\n        disabled && 'disabled',\n    );\n\n    return (\n        <div\n            className={className}\n            title={title}\n            {...otherProps}\n        >\n            <div className={styles.left}>\n                {children}\n            </div>\n            { rightComponent && (\n                <div className={_cs(rightComponentClassName, styles.right)}>\n                    { rightComponent }\n                </div>\n            )}\n        </div>\n    );\n}\n\nLabel.defaultProps = {\n    active: false,\n    disabled: false,\n    error: false,\n};\n\nexport default Label;\n","import React, { useState, useEffect } from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport { Layer } from '#types';\nimport {\n    imageUrlToDataUrl,\n    getRasterLegendUrl,\n} from '#utils/common';\n\nimport styles from './styles.css';\n\ninterface RasterLegendProps {\n    className?: string;\n    rasterLayer?: Layer;\n}\n\nfunction Legend(props: RasterLegendProps) {\n    const {\n        className,\n        rasterLayer,\n    } = props;\n\n    const [rasterLegendDataUrl, setRasterLegendDataUrl] = useState<string | null | undefined>();\n\n    useEffect(\n        () => {\n            if (rasterLayer) {\n                const url = getRasterLegendUrl(\n                    rasterLayer.geoserverUrl,\n                    rasterLayer.workspace,\n                    rasterLayer.layerName,\n                );\n                imageUrlToDataUrl(\n                    url,\n                    (dataUrl) => {\n                        setRasterLegendDataUrl(dataUrl);\n                    },\n                );\n            }\n        },\n        [rasterLayer],\n    );\n\n    if (!rasterLegendDataUrl) {\n        return null;\n    }\n\n    return (\n        <div className={_cs(styles.rasterLegend, className)}>\n            {rasterLayer?.name && (\n                <h5 className={styles.heading}>\n                    {rasterLayer?.name}\n                </h5>\n            )}\n            <img\n                className={styles.rasterLegendImage}\n                src={rasterLegendDataUrl}\n                alt={rasterLayer?.layerName}\n            />\n        </div>\n    );\n}\n\nexport default Legend;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"region-level-selection\":\"styles_region-level-selection_PKFFaUIEw5VZbp0h2ug2b\",\"regionLevelSelection\":\"styles_region-level-selection_PKFFaUIEw5VZbp0h2ug2b\"};"],"sourceRoot":""}