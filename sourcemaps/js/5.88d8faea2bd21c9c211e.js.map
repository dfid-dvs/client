{"version":3,"sources":["webpack:///./src/views/Dashboard/useMapStateForFiveW.tsx","webpack:///./src/views/Dashboard/index.tsx","webpack:///./src/views/Dashboard/styles.css"],"names":["useMapStateForFiveW","regionLevel","selectedFiveWOption","regionFiveWGetUrl","apiEndPoint","undefined","useRequest","regionFiveWPending","regionFiveWListResponse","useMemo","results","d","id","code","value","fiveWOptions","key","label","unit","datatype","fiveWKeySelector","option","fiveWLabelSelector","legendKeySelector","radius","legendValueSelector","legendRadiusSelector","indicatorKeySelector","indicator","indicatorLabelSelector","fullTitle","indicatorGroupKeySelector","category","layerKeySelector","layerLabelSelector","name","Dashboard","props","className","useContext","NavbarContext","useState","selectedIndicator","setSelectedIndicator","setFiveWOption","selectedLayer","setSelectedLayer","invertMapStyle","setInvertMapStyle","indicatorListGetUrl","indicatorListPending","indicatorListResponse","indicatorList","mapLayerGetUrl","mapLayerListPending","mapLayerListResponse","useMapStateForIndicator","indicatorMapState","fiveWMapState","i","indicatorTitle","fiveW","fiveWTitle","title","isDefined","join","choroplethMapState","choroplethTitle","choroplethInteger","choroplethUnit","bubbleMapState","bubbleTitle","bubbleInteger","bubbleUnit","titleForPrintBar","valueList","min","Math","max","generateChoroplethMapPaintAndLegend","colorDomain","mapPaint","paint","mapLegend","legend","dataMinValue","abs","hasNegativeValues","v","hasPositiveValues","legendType","maxRadius","generateBubbleMapPaintAndLegend","bubblePaint","bubbleLegend","bubbleLegendType","selectedIndicatorDetails","rasterLayers","type","selectedRasterLayer","printMode","setPrintMode","showLegend","length","_cs","styles","dashboard","PrintButton","printModeButton","onPrintModeChange","IndicatorMap","mapContainer","choroplethMapPaint","bubbleMapPaint","rasterLayer","mapStyleConfigContainer","RegionSelector","searchHidden","separator","SelectInput","inputItem","options","onChange","optionLabelSelector","optionKeySelector","disabled","groupKeySelector","abstract","ToggleButton","legendContainer","ChoroplethLegend","minValue","BubbleLegend","data","keySelector","valueSelector","radiusSelector","RasterLegend","PrintDetailsBar","show","description","module","exports"],"mappings":"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","file":"js/5.88d8faea2bd21c9c211e.js","sourcesContent":["import { useMemo } from 'react';\nimport {\n    MultiResponse,\n    RegionLevelOption,\n    MapStateItem,\n} from '#types';\nimport { apiEndPoint } from '#utils/constants';\n\nimport useRequest from '#hooks/useRequest';\n\nimport {\n    FiveW,\n    FiveWOptionKey,\n} from './types';\n\nfunction useMapStateForFiveW(\n    regionLevel: RegionLevelOption,\n    selectedFiveWOption: FiveWOptionKey | undefined,\n): [boolean, MapStateItem[]] {\n    const regionFiveWGetUrl = selectedFiveWOption\n        ? `${apiEndPoint}/core/fivew-${regionLevel}/`\n        : undefined;\n\n    const [\n        regionFiveWPending,\n        regionFiveWListResponse,\n    ] = useRequest<MultiResponse<FiveW>>(regionFiveWGetUrl);\n\n    const fiveWMapState: MapStateItem[] = useMemo(\n        () => {\n            if (!regionFiveWListResponse || !selectedFiveWOption) {\n                return [];\n            }\n\n            return regionFiveWListResponse?.results.map(d => ({\n                id: +d.code,\n                value: d[selectedFiveWOption],\n            }));\n        },\n        [regionFiveWListResponse, selectedFiveWOption],\n    );\n\n    return [regionFiveWPending, fiveWMapState];\n}\n\nexport default useMapStateForFiveW;\n","import React, { useMemo, useContext, useState } from 'react';\nimport {\n    _cs,\n    isDefined,\n} from '@togglecorp/fujs';\n\nimport RegionSelector from '#components/RegionSelector';\nimport NavbarContext from '#components/NavbarContext';\nimport ToggleButton from '#components/ToggleButton';\nimport SelectInput from '#components/SelectInput';\nimport ChoroplethLegend from '#components/ChoroplethLegend';\nimport BubbleLegend, { BubbleLegendType } from '#components/BubbleLegend';\nimport IndicatorMap from '#components/IndicatorMap';\nimport PrintButton from '#components/PrintButton';\nimport PrintDetailsBar from '#components/PrintDetailsBar';\nimport RasterLegend from '#components/RasterLegend';\n\nimport useRequest from '#hooks/useRequest';\nimport useMapStateForIndicator from '#hooks/useMapStateForIndicator';\n\nimport {\n    generateChoroplethMapPaintAndLegend,\n    generateBubbleMapPaintAndLegend,\n} from '#utils/common';\nimport {\n    MultiResponse,\n    LegendItem,\n    Layer,\n    Indicator,\n} from '#types';\n\nimport {\n    colorDomain,\n    apiEndPoint,\n} from '#utils/constants';\n\nimport useMapStateForFiveW from './useMapStateForFiveW';\n\nimport {\n    FiveWOptionKey,\n    FiveWOption,\n} from './types';\n\nimport styles from './styles.css';\n\nconst fiveWOptions: FiveWOption[] = [\n    {\n        key: 'allocatedBudget',\n        label: 'Allocated Budget',\n        unit: '£',\n    },\n    {\n        key: 'maleBeneficiary',\n        label: 'Male Beneficiary',\n        datatype: 'integer',\n    },\n    {\n        key: 'femaleBeneficiary',\n        label: 'Female Beneficiary',\n        datatype: 'integer',\n    },\n    {\n        key: 'totalBeneficiary',\n        label: 'Total Beneficiary',\n        datatype: 'integer',\n    },\n];\n\nconst fiveWKeySelector = (option: FiveWOption) => option.key;\nconst fiveWLabelSelector = (option: FiveWOption) => option.label;\n\nconst legendKeySelector = (option: LegendItem) => option.radius;\nconst legendValueSelector = (option: LegendItem) => option.value;\nconst legendRadiusSelector = (option: LegendItem) => option.radius;\n\nconst indicatorKeySelector = (indicator: Indicator) => indicator.id;\nconst indicatorLabelSelector = (indicator: Indicator) => indicator.fullTitle;\nconst indicatorGroupKeySelector = (indicator: Indicator) => indicator.category;\n\nconst layerKeySelector = (d: Layer) => d.id;\nconst layerLabelSelector = (d: Layer) => d.name;\n\ninterface Props {\n    className?: string;\n}\n\nconst Dashboard = (props: Props) => {\n    const { className } = props;\n    const { regionLevel } = useContext(NavbarContext);\n\n    const [\n        selectedIndicator,\n        setSelectedIndicator,\n    ] = useState<number | undefined>(undefined);\n\n    const [\n        selectedFiveWOption,\n        setFiveWOption,\n    ] = useState<FiveWOptionKey | undefined>('allocatedBudget');\n\n    const [selectedLayer, setSelectedLayer] = useState<number | undefined>(undefined);\n\n    const [invertMapStyle, setInvertMapStyle] = useState(false);\n\n    const indicatorListGetUrl = `${apiEndPoint}/core/indicator-list/`;\n    const [\n        indicatorListPending,\n        indicatorListResponse,\n    ] = useRequest<MultiResponse<Indicator>>(indicatorListGetUrl);\n    const indicatorList = indicatorListResponse?.results;\n\n    const mapLayerGetUrl = `${apiEndPoint}/core/map-layer/`;\n    const [\n        mapLayerListPending,\n        mapLayerListResponse,\n    ] = useRequest<MultiResponse<Layer>>(mapLayerGetUrl);\n\n    const [\n        indicatorMapStatePending,\n        indicatorMapState,\n    ] = useMapStateForIndicator(regionLevel, selectedIndicator);\n\n    const [\n        fiveWMapStatePending,\n        fiveWMapState,\n    ] = useMapStateForFiveW(regionLevel, selectedFiveWOption);\n\n    // const mapStatePending = indicatorMapStatePending || fiveWMapStatePending;\n\n    const {\n        choroplethMapState,\n        choroplethTitle,\n        choroplethInteger,\n        choroplethUnit,\n\n        bubbleMapState,\n        bubbleTitle,\n        bubbleInteger,\n        bubbleUnit,\n\n        titleForPrintBar,\n    } = useMemo(() => {\n        const indicator = indicatorList?.find(i => indicatorKeySelector(i) === selectedIndicator);\n        const indicatorTitle = indicator && indicatorLabelSelector(indicator);\n\n        const fiveW = fiveWOptions.find(i => fiveWKeySelector(i) === selectedFiveWOption);\n        const fiveWTitle = fiveW && fiveWLabelSelector(fiveW);\n\n        const title = [fiveWTitle, indicatorTitle].filter(isDefined).join(' & ');\n\n        if (invertMapStyle) {\n            return {\n                choroplethMapState: indicatorMapState,\n                choroplethTitle: indicatorTitle,\n                choroplethInteger: indicator?.datatype === 'integer',\n                choroplethUnit: indicator?.unit,\n\n                bubbleMapState: fiveWMapState,\n                bubbleTitle: fiveWTitle,\n                bubbleInteger: fiveW?.datatype === 'integer',\n                bubbleUnit: fiveW?.unit,\n\n                titleForPrintBar: title,\n            };\n        }\n        return {\n            choroplethMapState: fiveWMapState,\n            choroplethTitle: fiveWTitle,\n            choroplethInteger: fiveW?.datatype === 'integer',\n            choroplethUnit: fiveW?.unit,\n\n            bubbleMapState: indicatorMapState,\n            bubbleTitle: indicatorTitle,\n            bubbleInteger: indicator?.datatype === 'integer',\n            bubbleUnit: indicator?.unit,\n\n            titleForPrintBar: title,\n        };\n    }, [\n        invertMapStyle,\n        indicatorMapState,\n        fiveWMapState,\n        selectedIndicator,\n        selectedFiveWOption,\n        indicatorList,\n    ]);\n\n    const {\n        paint: mapPaint,\n        legend: mapLegend,\n        min: dataMinValue,\n    } = useMemo(\n        () => {\n            const valueList = choroplethMapState.filter(d => isDefined(d.value)).map(d => d.value);\n\n            const min = Math.min(...valueList);\n            const max = Math.max(...valueList);\n\n            return generateChoroplethMapPaintAndLegend(colorDomain, min, max, choroplethInteger);\n        },\n        [choroplethMapState, choroplethInteger],\n    );\n\n    // const pending = mapStatePending || indicatorListPending;\n    const {\n        mapPaint: bubblePaint,\n        legend: bubbleLegend,\n        legendType: bubbleLegendType,\n    } = useMemo(() => {\n        const valueList = bubbleMapState\n            .map(d => d.value)\n            .filter(isDefined)\n            .map(Math.abs);\n\n        const hasNegativeValues = bubbleMapState.some(v => v.value < 0);\n        const hasPositiveValues = bubbleMapState.some(v => v.value > 0);\n\n        let legendType: BubbleLegendType = 'both';\n        if (hasNegativeValues && !hasPositiveValues) {\n            legendType = 'negative';\n        } else if (!hasNegativeValues && hasPositiveValues) {\n            legendType = 'positive';\n        }\n\n        const min = Math.min(...valueList);\n        const max = Math.max(...valueList);\n\n        let maxRadius = 50;\n        if (regionLevel === 'district') {\n            maxRadius = 40;\n        } else if (regionLevel === 'municipality') {\n            maxRadius = 30;\n        }\n\n        return {\n            legendType,\n            ...generateBubbleMapPaintAndLegend(min, max, maxRadius, bubbleInteger),\n        };\n    }, [bubbleMapState, bubbleInteger, regionLevel]);\n\n    const selectedIndicatorDetails = useMemo(\n        () => {\n            if (selectedIndicator) {\n                return indicatorListResponse?.results.find(\n                    d => d.id === selectedIndicator,\n                );\n            }\n            return undefined;\n        },\n        [selectedIndicator, indicatorListResponse],\n    );\n\n    const rasterLayers = useMemo(\n        () => (mapLayerListResponse?.results.filter(v => v.type === 'raster')),\n        [mapLayerListResponse],\n    );\n\n    const selectedRasterLayer = useMemo(\n        () => rasterLayers?.find(v => v.id === selectedLayer),\n        [rasterLayers, selectedLayer],\n    );\n    const [printMode, setPrintMode] = useState(false);\n\n    const showLegend = (\n        bubbleLegend.length > 0\n        || Object.keys(mapLegend).length > 0\n        || selectedRasterLayer\n    );\n\n    return (\n        <div className={_cs(\n            styles.dashboard,\n            className,\n            printMode && styles.printMode,\n        )}\n        >\n            <PrintButton\n                className={styles.printModeButton}\n                printMode={printMode}\n                onPrintModeChange={setPrintMode}\n            />\n            {/* pending && (\n                <Backdrop className={styles.backdrop}>\n                    <LoadingAnimation />\n                </Backdrop>\n            ) */}\n            <IndicatorMap\n                className={styles.mapContainer}\n                regionLevel={regionLevel}\n                choroplethMapState={choroplethMapState}\n                choroplethMapPaint={mapPaint}\n                bubbleMapState={bubbleMapState}\n                bubbleMapPaint={bubblePaint}\n                rasterLayer={selectedRasterLayer}\n                printMode={printMode}\n            />\n            <div className={styles.mapStyleConfigContainer}>\n                <RegionSelector searchHidden />\n                <div className={styles.separator} />\n                <SelectInput\n                    label=\"DFID Data\"\n                    className={styles.inputItem}\n                    options={fiveWOptions}\n                    onChange={setFiveWOption}\n                    value={selectedFiveWOption}\n                    optionLabelSelector={fiveWLabelSelector}\n                    optionKeySelector={fiveWKeySelector}\n                />\n                <SelectInput\n                    label=\"Indicator\"\n                    className={styles.inputItem}\n                    disabled={indicatorListPending}\n                    options={indicatorList}\n                    onChange={setSelectedIndicator}\n                    value={selectedIndicator}\n                    optionLabelSelector={indicatorLabelSelector}\n                    optionKeySelector={indicatorKeySelector}\n                    groupKeySelector={indicatorGroupKeySelector}\n                />\n                {selectedIndicatorDetails && selectedIndicatorDetails.abstract && (\n                    <div className={styles.abstract}>\n                        { selectedIndicatorDetails.abstract }\n                    </div>\n                )}\n                <ToggleButton\n                    label=\"Toggle Choropleth/Bubble\"\n                    className={styles.inputItem}\n                    value={invertMapStyle}\n                    onChange={setInvertMapStyle}\n                />\n                <div className={styles.separator} />\n                <SelectInput\n                    label=\"Background Layer\"\n                    className={styles.inputItem}\n                    disabled={mapLayerListPending}\n                    options={rasterLayers}\n                    onChange={setSelectedLayer}\n                    value={selectedLayer}\n                    optionKeySelector={layerKeySelector}\n                    optionLabelSelector={layerLabelSelector}\n                />\n            </div>\n            {showLegend && (\n                <div className={styles.legendContainer}>\n                    <ChoroplethLegend\n                        className={styles.legend}\n                        title={choroplethTitle}\n                        minValue={dataMinValue}\n                        legend={mapLegend}\n                        unit={choroplethUnit}\n                    />\n                    <BubbleLegend\n                        className={styles.legend}\n                        title={bubbleTitle}\n                        data={bubbleLegend}\n                        keySelector={legendKeySelector}\n                        valueSelector={legendValueSelector}\n                        radiusSelector={legendRadiusSelector}\n                        legendType={bubbleLegendType}\n                        unit={bubbleUnit}\n                    />\n                    {selectedRasterLayer && (\n                        <RasterLegend\n                            className={styles.legend}\n                            rasterLayer={selectedRasterLayer}\n                        />\n                    )}\n                </div>\n            )}\n            <PrintDetailsBar\n                show={printMode}\n                title={titleForPrintBar}\n                description={selectedIndicatorDetails?.abstract}\n            />\n        </div>\n    );\n};\n\nexport default Dashboard;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"styles_dashboard_24cyahJXZ9iUKuW9FJKdro\",\"map-container\":\"styles_map-container_14kTn-B8UGRrY_yW8Yu4ju\",\"mapContainer\":\"styles_map-container_14kTn-B8UGRrY_yW8Yu4ju\",\"map-style-config-container\":\"styles_map-style-config-container_1uZrftFKp_PzkcEGhTVRsd\",\"mapStyleConfigContainer\":\"styles_map-style-config-container_1uZrftFKp_PzkcEGhTVRsd\",\"separator\":\"styles_separator_3AqiwYT_vQy4QV8r0GE3Hn\",\"heading\":\"styles_heading_1nKQ57Vki_Jn5ExapoT3Ux\",\"input-item\":\"styles_input-item_3wBKsJ_dPR9J0tvHLtN7vw\",\"inputItem\":\"styles_input-item_3wBKsJ_dPR9J0tvHLtN7vw\",\"abstract\":\"styles_abstract_2ifAVY6o1Dm_OMcmHDgujM\",\"legend-container\":\"styles_legend-container_3n1EQnPXzCm4eaz1tY0Bua\",\"legendContainer\":\"styles_legend-container_3n1EQnPXzCm4eaz1tY0Bua\",\"legend\":\"styles_legend_2zWp4cMHQ7wgDFU-LR4bYz\",\"print-mode-button\":\"styles_print-mode-button_3ksTW1Iw5Y_9xOcFHb4pB0\",\"printModeButton\":\"styles_print-mode-button_3ksTW1Iw5Y_9xOcFHb4pB0\",\"print-mode\":\"styles_print-mode_1fqyiV6LkKYIjpfalrmI5s\",\"printMode\":\"styles_print-mode_1fqyiV6LkKYIjpfalrmI5s\"};"],"sourceRoot":""}