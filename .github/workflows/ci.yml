name: CI

on:
  pull_request:
  push:
    branches:
      - develop
      - release
    tags:
      - v*

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Using react-store
      - uses: actions/checkout@v2
        with:
          repository: toggle-corp/react-store
          ref: develop
          path: src/vendor/react-store

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run yarn install
        run: yarn install

      # TODO: Fix test and uncommnet
      # - name: Run yarn test
      #   run: yarn test

      - name: Run yarn build (also test)
        run: NODE_OPTIONS=--max_old_space_size=4096 yarn build
        env:
          REACT_APP_API_SERVER_URL: http://139.59.67.104:8060

      - name: Save build files as artifact
        uses: actions/upload-artifact@v1
        with:
          name: dfid-dvs
          path: build


  deploy:
    name: Push to Github Pages
    needs: test
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == 'refs/heads/release'

    # TODO: Only run for tags and create releaes
    # if: github.event_name == 'push' && startsWith(github.ref,'refs/tags/v')

    steps:
      - uses: actions/download-artifact@v1
        with:
          name: dfid-dvs
          path: build

      - name: Add CNAME
        run: echo "dfid-dvs.togglecorp.com" > build/CNAME

      - name: Deploy
        if: success()
        uses: crazy-max/ghaction-github-pages@v1
        with:
          target_branch: gh-pages
          build_dir: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
